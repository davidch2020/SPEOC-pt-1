{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ffb6b608-d9fe-4053-9777-602f966f2510",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "20007377-5a17-4817-9639-df66fed0f256",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8e9b8768-914d-400e-8c00-b9473d22e25c",
   "metadata": {},
   "outputs": [],
   "source": [
    "file_path = '/Users/isabellasmojver/Downloads/'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "367b33db-4f02-4484-8b4d-8db4c8df541e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "File successfully loaded.\n",
      "\n",
      "Found 396 rows with potential speculator names:\n",
      "\n",
      "Full results saved to 'speculator_matches_agg_debt_grouped.csv'\n",
      "\n",
      "Summary of potential matches:\n",
      "Richard Platt: 21 potential matches\n",
      "William Duer: 1 potential matches\n",
      "Clement Biddle: 9 potential matches\n",
      "Elias Boudinot: 15 potential matches\n",
      "Robert Morris: 76 potential matches\n",
      "Daniel Parker: 4 potential matches\n",
      "John Delafield: 3 potential matches\n",
      "Richard Smith: 3 potential matches\n",
      "James Jarvis: 2 potential matches\n",
      "Samuel Rogers: 11 potential matches\n",
      "Leonard Bleecker: 2 potential matches\n",
      "Samuel Breck: 1 potential matches\n",
      "Nathan Bond: 1 potential matches\n",
      "William Philips: 1 potential matches\n",
      "John Peck: 4 potential matches\n",
      "Jonathan Mason: 12 potential matches\n",
      "William Burley: 3 potential matches\n",
      "John Sprague: 16 potential matches\n",
      "William Bingham: 4 potential matches\n",
      "Blair McClenachan: 3 potential matches\n",
      "Peter Wikoff: 36 potential matches\n",
      "Charles Pettit: 27 potential matches\n",
      "John Olden: 1 potential matches\n",
      "Christopher Marshall: 13 potential matches\n",
      "Andrew Caldwell: 29 potential matches\n",
      "John Caldwell: 4 potential matches\n",
      "Nicholas Brown: 8 potential matches\n",
      "Philip Allen: 1 potential matches\n",
      "Zachariah Allen: 2 potential matches\n",
      "Nightingale: 9 potential matches\n",
      "Joseph Clarke: 6 potential matches\n",
      "Welcome Arnold: 1 potential matches\n",
      "Hazard: 45 potential matches\n",
      "Addoms: 1 potential matches\n",
      "Robert Bridges: 20 potential matches\n",
      "Thomas Willing: 1 potential matches\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import os\n",
    "import re\n",
    "\n",
    "# List of speculator names\n",
    "speculator_names = [\n",
    "    \"Richard Platt\", \"William Duer\", \"William Constable\", \"Andrew Craigie\",\n",
    "    \"Clement Biddle\", \"Elias Boudinot\", \"Robert Morris\", \"Gouverneur Morris\",\n",
    "    \"Daniel Parker\", \"Herman LeRoy\", \"William Bayard\", \"John Delafield\",\n",
    "    \"Watson and Greenleaf\", \"C. and J. Shaw\", \"Nicholas Low\", \"Robert Gilchrist\",\n",
    "    \"Peter Stadnitski\", \"Matthys Ooster\", \"Karel D'Amour\", \"Kindreck Vollenhoven\",\n",
    "    \"Hendrick Vollenhoven\", \"Etienne L'Espinasse\", \"Christian van Eighen\",\n",
    "    \"Nicholas Van Staphorst\", \"Gerrit Nutges\", \"Johan van Franckenstein\",\n",
    "    \"Richard Smith\", \"James Jarvis\", \"Christopher Gore\", \"Samuel Rogers\",\n",
    "    \"Francis Baring\", \"Edmund Boehm\", \"Thomas Hinchman\", \n",
    "    \"Charles John Michael de Wolf\", \"Francis Vanderborcht\", \"James Seagrove\",\n",
    "    \"Robert Hazlehurst & Co.\", \"Robert Hazlehurst\", \"Leonard Bleecker\",\n",
    "    \"Nathaniel Prime\", \"Samuel Breck\", \"David Sears\", \"Nathan Bond\",\n",
    "    \"William Philips\", \"William Philips, Jr.\", \"John Peck\", \"Jonathan Mason\",\n",
    "    \"Jonathan Mason, Jr.\", \"William Burley\", \"John Sprague\", \"Mordecai Lewis\", \"William Bingham\",\n",
    "    \"Matthew McConnell\", \"Blair McClenachan\", \"Solomon Lyons\", \"Peter Wikoff\",\n",
    "    \"Charles Pettit\", \"John Olden\", \"John M. Taylor\", \"Walter Stewart\",\n",
    "    \"Andrew Summers, Jr.\", \"Mrs. McClenachan\", \"Christopher Marshall\",\n",
    "    \"Christopher Marshall, Jr.\", \"Charles Marshall\", \"Andrew Caldwell\",\n",
    "    \"John Caldwell\", \"Nicholas Brown\", \"Philip Allen\", \"Zachariah Allen\",\n",
    "    \"Jabez Bowen\", \"Clarke and Nightingale\", \"Nightingale\", \"Joseph Clarke\",\n",
    "    \"Welcome Arnold\", \"John Harbach\", \"Hazard\", \"Addoms\", \"Robert Bridges\", \"Edward Fox\",\n",
    "    \"Dr. Robert Blackwell\", \"Thomas Willing\"\n",
    "]\n",
    "\n",
    "file_path = '/Applications/SPEOC-pt-1/cleaning_CD/pre1790/data/agg_debt_grouped.csv'\n",
    "\n",
    "# Read the CSV file\n",
    "df = pd.read_csv(file_path, low_memory=False)\n",
    "print(\"File successfully loaded.\")\n",
    "\n",
    "# Function to check if a full name matches any speculator name\n",
    "def is_speculator(first_name, last_name):\n",
    "    if pd.isna(first_name) or pd.isna(last_name):\n",
    "        return False\n",
    "    full_name = f\"{first_name} {last_name}\".lower()\n",
    "    return any(speculator.lower() in full_name for speculator in speculator_names)\n",
    "\n",
    "df['is_speculator'] = df.apply(lambda row: is_speculator(row['to whom due | first name'], row['to whom due | last name']), axis=1)\n",
    "\n",
    "speculator_rows = df[df['is_speculator']]\n",
    "\n",
    "if not speculator_rows.empty:\n",
    "    print(f\"\\nFound {len(speculator_rows)} rows with potential speculator names:\")\n",
    "    columns_to_display = ['to whom due | first name', 'to whom due | last name']\n",
    "    \n",
    "    # Save results to CSV\n",
    "    speculator_rows.to_csv('speculator_matches_agg_debt_grouped.csv', index=False)\n",
    "    print(\"\\nFull results saved to 'speculator_matches_agg_debt_grouped.csv'\")\n",
    "else:\n",
    "    print(\"No speculator names found in the file.\")\n",
    "\n",
    "print(\"\\nSummary of potential matches:\")\n",
    "for speculator in speculator_names:\n",
    "    count = speculator_rows.apply(lambda row: speculator.lower() in f\"{row['to whom due | first name']} {row['to whom due | last name']}\".lower(), axis=1).sum()\n",
    "    if count > 0:\n",
    "        print(f\"{speculator}: {count} potential matches\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "c3d140fd-9279-4e4f-bd62-2883eb603512",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of speculators defined: 82\n",
      "\n",
      "Processing file: Pierce_Certs_cleaned_2019.csv\n",
      "Found Addoms in Pierce_Certs_cleaned_2019.csv\n",
      "Found Leonard Bleecker in Pierce_Certs_cleaned_2019.csv\n",
      "Found Jabez Bowen in Pierce_Certs_cleaned_2019.csv\n",
      "Found Nicholas Brown in Pierce_Certs_cleaned_2019.csv\n",
      "Found William Burley in Pierce_Certs_cleaned_2019.csv\n",
      "Found John Caldwell in Pierce_Certs_cleaned_2019.csv\n",
      "Found Joseph Clarke in Pierce_Certs_cleaned_2019.csv\n",
      "Found Hazard in Pierce_Certs_cleaned_2019.csv\n",
      "Found Christopher Marshall in Pierce_Certs_cleaned_2019.csv\n",
      "Found Robert Morris in Pierce_Certs_cleaned_2019.csv\n",
      "Found Nightingale in Pierce_Certs_cleaned_2019.csv\n",
      "Found Daniel Parker in Pierce_Certs_cleaned_2019.csv\n",
      "Found John Peck in Pierce_Certs_cleaned_2019.csv\n",
      "Found William Philips in Pierce_Certs_cleaned_2019.csv\n",
      "Found Richard Platt in Pierce_Certs_cleaned_2019.csv\n",
      "Found Samuel Rogers in Pierce_Certs_cleaned_2019.csv\n",
      "Found Richard Smith in Pierce_Certs_cleaned_2019.csv\n",
      "Found Walter Stewart in Pierce_Certs_cleaned_2019.csv\n",
      "\n",
      "Processing file: liquidated_debt_certificates_DE.csv\n",
      "\n",
      "Processing file: loan_office_certificates_9_states.csv\n",
      "Found Richard Smith in loan_office_certificates_9_states.csv\n",
      "Found Nightingale in loan_office_certificates_9_states.csv\n",
      "Found Jonathan Mason in loan_office_certificates_9_states.csv\n",
      "Found John Sprague in loan_office_certificates_9_states.csv\n",
      "Found Nicholas Brown in loan_office_certificates_9_states.csv\n",
      "Found Daniel Parker in loan_office_certificates_9_states.csv\n",
      "Found William Burley in loan_office_certificates_9_states.csv\n",
      "Found Joseph Clarke in loan_office_certificates_9_states.csv\n",
      "Found Peter Wikoff in loan_office_certificates_9_states.csv\n",
      "Found John Peck in loan_office_certificates_9_states.csv\n",
      "Found Hazard in loan_office_certificates_9_states.csv\n",
      "Found William Bingham in loan_office_certificates_9_states.csv\n",
      "Found William Philips in loan_office_certificates_9_states.csv\n",
      "Found Samuel Rogers in loan_office_certificates_9_states.csv\n",
      "Found Robert Bridges in loan_office_certificates_9_states.csv\n",
      "Found Robert Morris in loan_office_certificates_9_states.csv\n",
      "Found Elias Boudinot in loan_office_certificates_9_states.csv\n",
      "Found Christopher Marshall in loan_office_certificates_9_states.csv\n",
      "Found Charles Pettit in loan_office_certificates_9_states.csv\n",
      "Found Andrew Caldwell in loan_office_certificates_9_states.csv\n",
      "Found John Caldwell in loan_office_certificates_9_states.csv\n",
      "Found John Olden in loan_office_certificates_9_states.csv\n",
      "Found James Jarvis in loan_office_certificates_9_states.csv\n",
      "Found Clement Biddle in loan_office_certificates_9_states.csv\n",
      "\n",
      "Processing file: Marine_Liquidated_Debt_Certificates.csv\n",
      "Found William Duer in Marine_Liquidated_Debt_Certificates.csv\n",
      "\n",
      "Processing file: liquidated_debt_certificates_CT.csv\n",
      "Found John Caldwell in liquidated_debt_certificates_CT.csv\n",
      "Found Hazard in liquidated_debt_certificates_CT.csv\n",
      "File not found: liquidated_debt_certificates_MA.csv\n",
      "\n",
      "Processing file: liquidated_debt_certificates_NH.csv\n",
      "\n",
      "Processing file: liquidated_debt_certificates_NJ.csv\n",
      "Found Samuel Rogers in liquidated_debt_certificates_NJ.csv\n",
      "Found Robert Morris in liquidated_debt_certificates_NJ.csv\n",
      "Found John Peck in liquidated_debt_certificates_NJ.csv\n",
      "Found Peter Wikoff in liquidated_debt_certificates_NJ.csv\n",
      "Found Elias Boudinot in liquidated_debt_certificates_NJ.csv\n",
      "\n",
      "Processing file: liquidated_debt_certificates_NY.csv\n",
      "Found Thomas Willing in liquidated_debt_certificates_NY.csv\n",
      "Found Richard Platt in liquidated_debt_certificates_NY.csv\n",
      "Found Leonard Bleecker in liquidated_debt_certificates_NY.csv\n",
      "Found Hazard in liquidated_debt_certificates_NY.csv\n",
      "Found John Delafield in liquidated_debt_certificates_NY.csv\n",
      "Found Richard Smith in liquidated_debt_certificates_NY.csv\n",
      "Found Samuel Rogers in liquidated_debt_certificates_NY.csv\n",
      "Found John Peck in liquidated_debt_certificates_NY.csv\n",
      "\n",
      "Processing file: liquidated_debt_certificates_PA_stelle.csv\n",
      "Found William Bingham in liquidated_debt_certificates_PA_stelle.csv\n",
      "Found Jonathan Mason in liquidated_debt_certificates_PA_stelle.csv\n",
      "Found Robert Morris in liquidated_debt_certificates_PA_stelle.csv\n",
      "Found Andrew Caldwell in liquidated_debt_certificates_PA_stelle.csv\n",
      "Found Clement Biddle in liquidated_debt_certificates_PA_stelle.csv\n",
      "Found Blair McClenachan in liquidated_debt_certificates_PA_stelle.csv\n",
      "Found Robert Bridges in liquidated_debt_certificates_PA_stelle.csv\n",
      "\n",
      "Processing file: liquidated_debt_certificates_PA_story.csv\n",
      "Found John Caldwell in liquidated_debt_certificates_PA_story.csv\n",
      "\n",
      "Processing file: liquidated_debt_certificates_RI.csv\n",
      "Found Hazard in liquidated_debt_certificates_RI.csv\n",
      "Found Nightingale in liquidated_debt_certificates_RI.csv\n",
      "Found Joseph Clarke in liquidated_debt_certificates_RI.csv\n",
      "Found Zachariah Allen in liquidated_debt_certificates_RI.csv\n",
      "Found Philip Allen in liquidated_debt_certificates_RI.csv\n",
      "Found Welcome Arnold in liquidated_debt_certificates_RI.csv\n",
      "\n",
      "Speculator names found and their corresponding CSV files:\n",
      "\n",
      "Addoms:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "\n",
      "Andrew Caldwell:\n",
      "  - liquidated_debt_certificates_PA_stelle.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Blair McClenachan:\n",
      "  - liquidated_debt_certificates_PA_stelle.csv\n",
      "\n",
      "Charles Pettit:\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Christopher Marshall:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Clement Biddle:\n",
      "  - liquidated_debt_certificates_PA_stelle.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Daniel Parker:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Elias Boudinot:\n",
      "  - liquidated_debt_certificates_NJ.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Hazard:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - liquidated_debt_certificates_CT.csv\n",
      "  - liquidated_debt_certificates_NY.csv\n",
      "  - liquidated_debt_certificates_RI.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Jabez Bowen:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "\n",
      "James Jarvis:\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "John Caldwell:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - liquidated_debt_certificates_CT.csv\n",
      "  - liquidated_debt_certificates_PA_story.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "John Delafield:\n",
      "  - liquidated_debt_certificates_NY.csv\n",
      "\n",
      "John Olden:\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "John Peck:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - liquidated_debt_certificates_NJ.csv\n",
      "  - liquidated_debt_certificates_NY.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "John Sprague:\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Jonathan Mason:\n",
      "  - liquidated_debt_certificates_PA_stelle.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Joseph Clarke:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - liquidated_debt_certificates_RI.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Leonard Bleecker:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - liquidated_debt_certificates_NY.csv\n",
      "\n",
      "Nicholas Brown:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Nightingale:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - liquidated_debt_certificates_RI.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Peter Wikoff:\n",
      "  - liquidated_debt_certificates_NJ.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Philip Allen:\n",
      "  - liquidated_debt_certificates_RI.csv\n",
      "\n",
      "Richard Platt:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - liquidated_debt_certificates_NY.csv\n",
      "\n",
      "Richard Smith:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - liquidated_debt_certificates_NY.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Robert Bridges:\n",
      "  - liquidated_debt_certificates_PA_stelle.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Robert Morris:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - liquidated_debt_certificates_NJ.csv\n",
      "  - liquidated_debt_certificates_PA_stelle.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Samuel Rogers:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - liquidated_debt_certificates_NJ.csv\n",
      "  - liquidated_debt_certificates_NY.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Thomas Willing:\n",
      "  - liquidated_debt_certificates_NY.csv\n",
      "\n",
      "Walter Stewart:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "\n",
      "Welcome Arnold:\n",
      "  - liquidated_debt_certificates_RI.csv\n",
      "\n",
      "William Bingham:\n",
      "  - liquidated_debt_certificates_PA_stelle.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "William Burley:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "William Duer:\n",
      "  - Marine_Liquidated_Debt_Certificates.csv\n",
      "\n",
      "William Philips:\n",
      "  - Pierce_Certs_cleaned_2019.csv\n",
      "  - loan_office_certificates_9_states.csv\n",
      "\n",
      "Zachariah Allen:\n",
      "  - liquidated_debt_certificates_RI.csv\n",
      "\n",
      "Total number of speculators found: 36\n",
      "\n",
      "Results saved to 'speculator_file_matches.csv'\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import os\n",
    "import re\n",
    "\n",
    "speculators = [\n",
    "    \"Richard Platt\", \"William Duer\", \"William Constable\", \"Andrew Craigie\",\n",
    "    \"Clement Biddle\", \"Elias Boudinot\", \"Robert Morris\", \"Gouverneur Morris\",\n",
    "    \"Daniel Parker\", \"Herman LeRoy\", \"William Bayard\", \"John Delafield\",\n",
    "    \"Watson and Greenleaf\", \"C. and J. Shaw\", \"Nicholas Low\", \"Robert Gilchrist\",\n",
    "    \"Peter Stadnitski\", \"Matthys Ooster\", \"Karel D'Amour\", \"Kindreck Vollenhoven\",\n",
    "    \"Hendrick Vollenhoven\", \"Etienne L'Espinasse\", \"Christian van Eighen\",\n",
    "    \"Nicholas Van Staphorst\", \"Gerrit Nutges\", \"Johan van Franckenstein\",\n",
    "    \"Richard Smith\", \"James Jarvis\", \"Christopher Gore\", \"Samuel Rogers\",\n",
    "    \"Francis Baring\", \"Edmund Boehm\", \"Thomas Hinchman\", \n",
    "    \"Charles John Michael de Wolf\", \"Francis Vanderborcht\", \"James Seagrove\",\n",
    "    \"Robert Hazlehurst & Co.\", \"Robert Hazlehurst\", \"Leonard Bleecker\",\n",
    "    \"Nathaniel Prime\", \"Samuel Breck\", \"David Sears\", \"Nathan Bond\",\n",
    "    \"William Philips\", \"William Philips, Jr.\", \"John Peck\", \"Jonathan Mason\",\n",
    "    \"Jonathan Mason, Jr.\", \"William Burley\", \"John Sprague\", \"Mordecai Lewis\", \"William Bingham\",\n",
    "    \"Matthew McConnell\", \"Blair McClenachan\", \"Solomon Lyons\", \"Peter Wikoff\",\n",
    "    \"Charles Pettit\", \"John Olden\", \"John M. Taylor\", \"Walter Stewart\",\n",
    "    \"Andrew Summers, Jr.\", \"Mrs. McClenachan\", \"Christopher Marshall\",\n",
    "    \"Christopher Marshall, Jr.\", \"Charles Marshall\", \"Andrew Caldwell\",\n",
    "    \"John Caldwell\", \"Nicholas Brown\", \"Philip Allen\", \"Zachariah Allen\",\n",
    "    \"Jabez Bowen\", \"Clarke and Nightingale\", \"Nightingale\", \"Joseph Clarke\",\n",
    "    \"Welcome Arnold\", \"John Harbach\", \"Hazard\", \"Addoms\", \"Robert Bridges\", \"Edward Fox\",\n",
    "    \"Dr. Robert Blackwell\", \"Thomas Willing\"\n",
    "]\n",
    "\n",
    "print(f\"Number of speculators defined: {len(speculators)}\")\n",
    "\n",
    "# List of CSV files \n",
    "csv_files = {\n",
    "    'Pierce_Certs_cleaned_2019.csv': {'first': 'First', 'last': 'Last'},\n",
    "    'liquidated_debt_certificates_DE.csv': {'first': 'First', 'last': 'Last'},\n",
    "    'loan_office_certificates_9_states.csv': {'first': 'First', 'last': 'Last'},\n",
    "    'Marine_Liquidated_Debt_Certificates.csv': {'first': 'First', 'last': 'Last'},\n",
    "    'liquidated_debt_certificates_CT.csv': {'first': 'First', 'last': 'Last'},\n",
    "    'liquidated_debt_certificates_MA_cleaned.csv': {'first': 'First', 'last': 'Last'},\n",
    "    'liquidated_debt_certificates_NH.csv': {'first': 'First', 'last': 'Last'},\n",
    "    'liquidated_debt_certificates_NJ.csv': {'first': 'First', 'last': 'Last'},\n",
    "    'liquidated_debt_certificates_NY.csv': {'first': 'First', 'last': 'Last'},\n",
    "    'liquidated_debt_certificates_PA_stelle.csv': {'first': 'First', 'last': 'Last'},\n",
    "    'liquidated_debt_certificates_PA_story.csv': {'first': 'First', 'last': 'Last'},\n",
    "    'liquidated_debt_certificates_RI.csv': {'first': 'First', 'last': 'Last'},\n",
    "}\n",
    "\n",
    "# Directory containing the CSV files\n",
    "directory = '/Users/isabellasmojver/Downloads/'\n",
    "\n",
    "speculator_files = {name: set() for name in speculators}\n",
    "\n",
    "def find_speculator(name):\n",
    "    name = str(name).lower()\n",
    "    for speculator in speculators:\n",
    "        if re.search(r'\\b' + re.escape(speculator.lower()) + r'\\b', name):\n",
    "            return speculator\n",
    "    return None\n",
    "\n",
    "def process_file(file_name, df, columns):\n",
    "    print(f\"\\nProcessing file: {file_name}\")\n",
    "    \n",
    "    first_col, last_col = columns['first'], columns['last']\n",
    "    \n",
    "    if first_col not in df.columns or last_col not in df.columns:\n",
    "        print(f\"Warning: Required columns not found in {file_name}\")\n",
    "        print(f\"Columns in file: {', '.join(df.columns)}\")\n",
    "        return\n",
    "    \n",
    "    df['full_name'] = df[first_col].astype(str) + ' ' + df[last_col].astype(str)\n",
    "    matches = df['full_name'].apply(find_speculator)\n",
    "    for speculator in matches.dropna().unique():\n",
    "        speculator_files[speculator].add(file_name)\n",
    "        print(f\"Found {speculator} in {file_name}\")\n",
    "\n",
    "# Process each CSV file\n",
    "for file_name, columns in csv_files.items():\n",
    "    file_path = os.path.join(directory, file_name)\n",
    "    if os.path.exists(file_path):\n",
    "        try:\n",
    "            df = pd.read_csv(file_path, low_memory=False)\n",
    "            process_file(file_name, df, columns)\n",
    "        except Exception as e:\n",
    "            print(f\"Error processing {file_name}: {str(e)}\")\n",
    "    else:\n",
    "        print(f\"File not found: {file_name}\")\n",
    "\n",
    "# Display results\n",
    "print(\"\\nSpeculator names found and their corresponding CSV files:\")\n",
    "for speculator, files in sorted(speculator_files.items()):\n",
    "    if files:\n",
    "        print(f\"\\n{speculator}:\")\n",
    "        for file in sorted(files):\n",
    "            print(f\"  - {file}\")\n",
    "\n",
    "# Count and display total number of speculators found\n",
    "speculators_found = sum(1 for files in speculator_files.values() if files)\n",
    "print(f\"\\nTotal number of speculators found: {speculators_found}\")\n",
    "\n",
    "# Save results to a CSV file\n",
    "results = []\n",
    "for speculator, files in speculator_files.items():\n",
    "    if files:\n",
    "        results.append({\n",
    "            'Speculator': speculator,\n",
    "            'Files': ', '.join(sorted(files))\n",
    "        })\n",
    "\n",
    "results_df = pd.DataFrame(results)\n",
    "results_df.to_csv('speculator_file_matches.csv', index=False)\n",
    "print(\"\\nResults saved to 'speculator_file_matches.csv'\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "be672936-dbdc-4369-b0a5-cc84f604b6f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "File successfully loaded.\n",
      "\n",
      "Speculator Name : Total Dollar Value\n",
      "----------------------------------------\n",
      "Addoms: $613.93\n",
      "Andrew Caldwell: $87995.00\n",
      "Blair McClenachan: $2389.00\n",
      "Charles Pettit: $82500.00\n",
      "Christopher Marshall: $11000.00\n",
      "Clement Biddle: $117121.00\n",
      "Daniel Parker: $4300.00\n",
      "Elias Boudinot: $57858.00\n",
      "Hazard: $56114.07\n",
      "James Jarvis: $5800.00\n",
      "John Caldwell: $8045.00\n",
      "John Delafield: $1346.00\n",
      "John Olden: $2000.00\n",
      "John Peck: $361.00\n",
      "John Sprague: $38705.00\n",
      "Jonathan Mason: $9107.00\n",
      "Joseph Clarke: $6039.00\n",
      "Leonard Bleecker: $379.00\n",
      "Nathan Bond: $94.00\n",
      "Nicholas Brown: $32900.00\n",
      "Nightingale: $886.85\n",
      "Philip Allen: $17.00\n",
      "Richard Platt: $19420.00\n",
      "Richard Smith: $884.00\n",
      "Robert Bridges: $28880.00\n",
      "Robert Morris: $406751.00\n",
      "Samuel Breck: $96.00\n",
      "Samuel Rogers: $13021.00\n",
      "Thomas Willing: $1.00\n",
      "Welcome Arnold: $106.00\n",
      "William Burley: $3050.00\n",
      "William Duer: $231.00\n",
      "William Philips: $800.00\n",
      "Zachariah Allen: $47.00\n",
      "\n",
      "Results saved to 'speculator_dollar_values.csv'\n",
      "\n",
      "Total number of speculators found: 34\n",
      "Total dollar value across all speculators: $998857.85\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import re\n",
    "\n",
    "# List of speculator names\n",
    "speculators = [\n",
    "    \"Richard Platt\", \"William Duer\", \"William Constable\", \"Andrew Craigie\",\n",
    "    \"Clement Biddle\", \"Elias Boudinot\", \"Robert Morris\", \"Gouverneur Morris\",\n",
    "    \"Daniel Parker\", \"Herman LeRoy\", \"William Bayard\", \"John Delafield\",\n",
    "    \"Watson and Greenleaf\", \"C. and J. Shaw\", \"Nicholas Low\", \"Robert Gilchrist\",\n",
    "    \"Peter Stadnitski\", \"Matthys Ooster\", \"Karel D'Amour\", \"Kindreck Vollenhoven\",\n",
    "    \"Hendrick Vollenhoven\", \"Etienne L'Espinasse\", \"Christian van Eighen\",\n",
    "    \"Nicholas Van Staphorst\", \"Gerrit Nutges\", \"Johan van Franckenstein\",\n",
    "    \"Richard Smith\", \"James Jarvis\", \"Christopher Gore\", \"Samuel Rogers\",\n",
    "    \"Francis Baring\", \"Edmund Boehm\", \"Thomas Hinchman\", \n",
    "    \"Charles John Michael de Wolf\", \"Francis Vanderborcht\", \"James Seagrove\",\n",
    "    \"Robert Hazlehurst & Co.\", \"Robert Hazlehurst\", \"Leonard Bleecker\",\n",
    "    \"Nathaniel Prime\", \"Samuel Breck\", \"David Sears\", \"Nathan Bond\",\n",
    "    \"William Philips\", \"William Philips, Jr.\", \"John Peck\", \"Jonathan Mason\",\n",
    "    \"Jonathan Mason, Jr.\", \"William Burley\", \"John Sprague\", \"Mordecai Lewis\", \n",
    "    \"Matthew McConnell\", \"Blair McClenachan\", \"Solomon Lyons\",\n",
    "    \"Charles Pettit\", \"John Olden\", \"John M. Taylor\", \"Walter Stewart\",\n",
    "    \"Andrew Summers, Jr.\", \"Mrs. McClenachan\", \"Christopher Marshall\",\n",
    "    \"Christopher Marshall, Jr.\", \"Charles Marshall\", \"Andrew Caldwell\",\n",
    "    \"John Caldwell\", \"Nicholas Brown\", \"Philip Allen\", \"Zachariah Allen\",\n",
    "    \"Jabez Bowen\", \"Clarke and Nightingale\", \"Nightingale\", \"Joseph Clarke\",\n",
    "    \"Welcome Arnold\", \"John Harbach\", \"Hazard\", \"Addoms\", \"Robert Bridges\", \"Edward Fox\",\n",
    "    \"Dr. Robert Blackwell\", \"Thomas Willing\"\n",
    "]\n",
    "\n",
    "# File path\n",
    "file_path = '/Applications/SPEOC-pt-1/cleaning_CD/pre1790/data/agg_debt_grouped.csv'\n",
    "\n",
    "# Read the CSV file\n",
    "df = pd.read_csv(file_path, low_memory=False)\n",
    "print(\"File successfully loaded.\")\n",
    "\n",
    "def find_speculator(full_name):\n",
    "    full_name = str(full_name).lower()\n",
    "    for speculator in speculators:\n",
    "        if re.search(r'\\b' + re.escape(speculator.lower()) + r'\\b', full_name):\n",
    "            return speculator\n",
    "    return None\n",
    "\n",
    "# Combine first and last name columns\n",
    "df['full_name'] = df['to whom due | first name'] + ' ' + df['to whom due | last name']\n",
    "\n",
    "df['speculator'] = df['full_name'].apply(find_speculator)\n",
    "\n",
    "speculator_sums = df[df['speculator'].notna()].groupby('speculator')['amount | dollars'].sum()\n",
    "\n",
    "print(\"\\nSpeculator Name : Total Dollar Value\")\n",
    "print(\"-\" * 40)\n",
    "for speculator, total_dollars in speculator_sums.items():\n",
    "    print(f\"{speculator}: ${total_dollars:.2f}\")\n",
    "\n",
    "# Save results to CSV\n",
    "results_df = pd.DataFrame({'Speculator': speculator_sums.index, 'Total Dollar Value': speculator_sums.values})\n",
    "results_df.to_csv('speculator_dollar_values.csv', index=False)\n",
    "print(\"\\nResults saved to 'speculator_dollar_values.csv'\")\n",
    "\n",
    "print(f\"\\nTotal number of speculators found: {len(speculator_sums)}\")\n",
    "print(f\"Total dollar value across all speculators: ${speculator_sums.sum():.2f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "ff533541-7787-4a5e-a4a2-97f4671078ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Speculator Name : Total Dollar Value\n",
      "----------------------------------------\n",
      "Robert Morris: $68595.40\n",
      "Robert Bridges: $25588.99\n",
      "Andrew Caldwell: $24533.30\n",
      "Hazard: $24013.95\n",
      "Elias Boudinot: $23133.81\n",
      "Richard Platt: $19527.40\n",
      "Nicholas Brown: $11400.25\n",
      "John Sprague: $9639.34\n",
      "Christopher Marshall: $9279.00\n",
      "Samuel Rogers: $7918.88\n",
      "John Caldwell: $7884.26\n",
      "Charles Pettit: $7741.42\n",
      "Walter Stewart: $6205.65\n",
      "Jonathan Mason: $4329.94\n",
      "John Peck: $3043.42\n",
      "Leonard Bleecker: $2983.00\n",
      "Clement Biddle: $2948.52\n",
      "Daniel Parker: $2648.59\n",
      "Blair McClenachan: $2389.00\n",
      "Joseph Clarke: $1723.55\n",
      "Richard Smith: $1675.96\n",
      "John Delafield: $1346.00\n",
      "William Burley: $935.96\n",
      "Nightingale: $702.74\n",
      "Addoms: $613.93\n",
      "James Jarvis: $561.71\n",
      "John Olden: $530.06\n",
      "William Philips: $433.61\n",
      "Jabez Bowen: $156.56\n",
      "Welcome Arnold: $106.00\n",
      "Samuel Breck: $96.00\n",
      "Nathan Bond: $94.00\n",
      "Zachariah Allen: $47.00\n",
      "Philip Allen: $17.00\n",
      "Thomas Willing: $1.00\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import os\n",
    "import re\n",
    "\n",
    "# List of speculator names\n",
    "speculators = [\n",
    "    \"Richard Platt\", \"William Duer\", \"William Constable\", \"Andrew Craigie\",\n",
    "    \"Clement Biddle\", \"Elias Boudinot\", \"Robert Morris\", \"Gouverneur Morris\",\n",
    "    \"Daniel Parker\", \"Herman LeRoy\", \"William Bayard\", \"John Delafield\",\n",
    "    \"Watson and Greenleaf\", \"C. and J. Shaw\", \"Nicholas Low\", \"Robert Gilchrist\",\n",
    "    \"Peter Stadnitski\", \"Matthys Ooster\", \"Karel D'Amour\", \"Kindreck Vollenhoven\",\n",
    "    \"Hendrick Vollenhoven\", \"Etienne L'Espinasse\", \"Christian van Eighen\",\n",
    "    \"Nicholas Van Staphorst\", \"Gerrit Nutges\", \"Johan van Franckenstein\",\n",
    "    \"Richard Smith\", \"James Jarvis\", \"Christopher Gore\", \"Samuel Rogers\",\n",
    "    \"Francis Baring\", \"Edmund Boehm\", \"Thomas Hinchman\", \n",
    "    \"Charles John Michael de Wolf\", \"Francis Vanderborcht\", \"James Seagrove\",\n",
    "    \"Robert Hazlehurst & Co.\", \"Robert Hazlehurst\", \"Leonard Bleecker\",\n",
    "    \"Nathaniel Prime\", \"Samuel Breck\", \"David Sears\", \"Nathan Bond\",\n",
    "    \"William Philips\", \"William Philips, Jr.\", \"John Peck\", \"Jonathan Mason\",\n",
    "    \"Jonathan Mason, Jr.\", \"William Burley\", \"John Sprague\", \"Mordecai Lewis\",\n",
    "    \"Matthew McConnell\", \"Blair McClenachan\", \"Solomon Lyons\",\n",
    "    \"Charles Pettit\", \"John Olden\", \"John M. Taylor\", \"Walter Stewart\",\n",
    "    \"Andrew Summers, Jr.\", \"Mrs. McClenachan\", \"Christopher Marshall\",\n",
    "    \"Christopher Marshall, Jr.\", \"Charles Marshall\", \"Andrew Caldwell\",\n",
    "    \"John Caldwell\", \"Nicholas Brown\", \"Philip Allen\", \"Zachariah Allen\",\n",
    "    \"Jabez Bowen\", \"Clarke and Nightingale\", \"Nightingale\", \"Joseph Clarke\",\n",
    "    \"Welcome Arnold\", \"John Harbach\", \"Hazard\", \"Addoms\", \"Robert Bridges\", \"Edward Fox\",\n",
    "    \"Dr. Robert Blackwell\", \"Thomas Willing\"\n",
    "]\n",
    "\n",
    "# Directory containing the CSV files\n",
    "directory = '/Users/isabellasmojver/Downloads/'\n",
    "\n",
    "# List of CSV files\n",
    "csv_files = {\n",
    "    'Pierce_Certs_cleaned_2019.csv': {'First': 'First', 'Last': 'Last', 'Dollars': 'Value'},\n",
    "    'liquidated_debt_certificates_DE.csv': {'First': 'First', 'Last': 'Last', 'Dollars': 'Dollars'},\n",
    "    'loan_office_certificates_9_states.csv': {'First': 'First', 'Last': 'Last', 'Dollars': 'Specie Value'},\n",
    "    'Marine_Liquidated_Debt_Certificates.csv': {'First': 'First', 'Last': 'Last', 'Dollars': 'Dollars'},\n",
    "    'liquidated_debt_certificates_CT.csv': {'First': 'First', 'Last': 'Last', 'Dollars': 'Dollars'},\n",
    "    'liquidated_debt_certificates_NH.csv': {'First': 'First', 'Last': 'Last', 'Dollars': 'Dollars'},\n",
    "    'liquidated_debt_certificates_NJ.csv': {'First': 'First', 'Last': 'Last', 'Dollars': 'Dollars'},\n",
    "    'liquidated_debt_certificates_NY.csv': {'First': 'First', 'Last': 'Last', 'Dollars': 'Dollars'},\n",
    "    'liquidated_debt_certificates_PA_stelle.csv': {'First': 'First', 'Last': 'Last', 'Dollars':'Dollars'},\n",
    "    'liquidated_debt_certificates_PA_story.csv': {'First': 'First', 'Last': 'Last', 'Dollars': 'Dollars'},\n",
    "    'liquidated_debt_certificates_RI.csv': {'First': 'First', 'Last': 'Last', 'Dollars': 'Dollars'},\n",
    "    'liquidated_debt_certificates_MA_cleaned.csv': {'First': 'First', 'Last': 'Last', 'Dollars': 'Dollars'}\n",
    "}\n",
    "\n",
    "def find_speculator(name):\n",
    "    name = str(name).lower()\n",
    "    for speculator in speculators:\n",
    "        if re.search(r'\\b' + re.escape(speculator.lower()) + r'\\b', name):\n",
    "            return speculator\n",
    "    return None\n",
    "\n",
    "speculator_totals = {speculator: 0 for speculator in speculators}\n",
    "\n",
    "for file_name, columns in csv_files.items():\n",
    "    file_path = os.path.join(directory, file_name)\n",
    "    if os.path.exists(file_path):\n",
    "        try:\n",
    "            df = pd.read_csv(file_path, low_memory=False)\n",
    "            \n",
    "            if not all(col in df.columns for col in columns.values() if col is not None):\n",
    "                continue\n",
    "            \n",
    "            df = df.rename(columns={v: k for k, v in columns.items() if v is not None})\n",
    "            \n",
    "            if columns['Dollars'] is None:\n",
    "                continue\n",
    "            \n",
    "            df['Dollars'] = pd.to_numeric(df['Dollars'], errors='coerce')\n",
    "            \n",
    "            df['Full Name'] = df['First'] + ' ' + df['Last']\n",
    "            df['Speculator'] = df['Full Name'].apply(find_speculator)\n",
    "            \n",
    "            for speculator in speculators:\n",
    "                mask = df['Speculator'] == speculator\n",
    "                total = df.loc[mask, 'Dollars'].sum()\n",
    "                if total > 0:\n",
    "                    speculator_totals[speculator] += total\n",
    "        \n",
    "        except Exception as e:\n",
    "            pass\n",
    "    else:\n",
    "        pass\n",
    "\n",
    "print(\"\\nSpeculator Name : Total Dollar Value\")\n",
    "print(\"-\" * 40)\n",
    "for speculator, total in sorted(speculator_totals.items(), key=lambda x: x[1], reverse=True):\n",
    "    if total > 0:\n",
    "        print(f\"{speculator}: ${total:.2f}\")\n",
    "\n",
    "results_df = pd.DataFrame(list(speculator_totals.items()), columns=['Speculator', 'Total Dollar Value'])\n",
    "results_df = results_df[results_df['Total Dollar Value'] > 0].sort_values('Total Dollar Value', ascending=False)\n",
    "results_df.to_csv('speculator_dollar_values.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "2f987856-b393-451b-ab83-7786b9a81fa9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_dd5d8 th {\n",
       "  text-align: center;\n",
       "}\n",
       "#T_dd5d8 td {\n",
       "  text-align: left;\n",
       "}\n",
       "#T_dd5d8_row0_col0, #T_dd5d8_row0_col1, #T_dd5d8_row0_col2, #T_dd5d8_row0_col3, #T_dd5d8_row0_col4, #T_dd5d8_row0_col5, #T_dd5d8_row1_col0, #T_dd5d8_row1_col1, #T_dd5d8_row1_col2, #T_dd5d8_row1_col3, #T_dd5d8_row1_col4, #T_dd5d8_row1_col5, #T_dd5d8_row2_col0, #T_dd5d8_row2_col1, #T_dd5d8_row2_col2, #T_dd5d8_row2_col3, #T_dd5d8_row2_col4, #T_dd5d8_row2_col5, #T_dd5d8_row3_col0, #T_dd5d8_row3_col1, #T_dd5d8_row3_col2, #T_dd5d8_row3_col3, #T_dd5d8_row3_col4, #T_dd5d8_row3_col5, #T_dd5d8_row4_col0, #T_dd5d8_row4_col1, #T_dd5d8_row4_col2, #T_dd5d8_row4_col3, #T_dd5d8_row4_col4, #T_dd5d8_row4_col5, #T_dd5d8_row5_col0, #T_dd5d8_row5_col1, #T_dd5d8_row5_col2, #T_dd5d8_row5_col3, #T_dd5d8_row5_col4, #T_dd5d8_row5_col5, #T_dd5d8_row6_col0, #T_dd5d8_row6_col1, #T_dd5d8_row6_col2, #T_dd5d8_row6_col3, #T_dd5d8_row6_col4, #T_dd5d8_row6_col5, #T_dd5d8_row7_col0, #T_dd5d8_row7_col1, #T_dd5d8_row7_col2, #T_dd5d8_row7_col3, #T_dd5d8_row7_col4, #T_dd5d8_row7_col5, #T_dd5d8_row8_col0, #T_dd5d8_row8_col1, #T_dd5d8_row8_col2, #T_dd5d8_row8_col3, #T_dd5d8_row8_col4, #T_dd5d8_row8_col5, #T_dd5d8_row9_col0, #T_dd5d8_row9_col1, #T_dd5d8_row9_col2, #T_dd5d8_row9_col3, #T_dd5d8_row9_col4, #T_dd5d8_row9_col5, #T_dd5d8_row10_col0, #T_dd5d8_row10_col1, #T_dd5d8_row10_col2, #T_dd5d8_row10_col3, #T_dd5d8_row10_col4, #T_dd5d8_row10_col5, #T_dd5d8_row11_col0, #T_dd5d8_row11_col1, #T_dd5d8_row11_col2, #T_dd5d8_row11_col3, #T_dd5d8_row11_col4, #T_dd5d8_row11_col5, #T_dd5d8_row12_col0, #T_dd5d8_row12_col1, #T_dd5d8_row12_col2, #T_dd5d8_row12_col3, #T_dd5d8_row12_col4, #T_dd5d8_row12_col5, #T_dd5d8_row13_col0, #T_dd5d8_row13_col1, #T_dd5d8_row13_col2, #T_dd5d8_row13_col3, #T_dd5d8_row13_col4, #T_dd5d8_row13_col5, #T_dd5d8_row14_col0, #T_dd5d8_row14_col1, #T_dd5d8_row14_col2, #T_dd5d8_row14_col3, #T_dd5d8_row14_col4, #T_dd5d8_row14_col5, #T_dd5d8_row15_col0, #T_dd5d8_row15_col1, #T_dd5d8_row15_col2, #T_dd5d8_row15_col3, #T_dd5d8_row15_col4, #T_dd5d8_row15_col5, #T_dd5d8_row16_col0, #T_dd5d8_row16_col1, #T_dd5d8_row16_col2, #T_dd5d8_row16_col3, #T_dd5d8_row16_col4, #T_dd5d8_row16_col5, #T_dd5d8_row17_col0, #T_dd5d8_row17_col1, #T_dd5d8_row17_col2, #T_dd5d8_row17_col3, #T_dd5d8_row17_col4, #T_dd5d8_row17_col5, #T_dd5d8_row18_col0, #T_dd5d8_row18_col1, #T_dd5d8_row18_col2, #T_dd5d8_row18_col3, #T_dd5d8_row18_col4, #T_dd5d8_row18_col5, #T_dd5d8_row19_col0, #T_dd5d8_row19_col1, #T_dd5d8_row19_col2, #T_dd5d8_row19_col3, #T_dd5d8_row19_col4, #T_dd5d8_row19_col5, #T_dd5d8_row20_col0, #T_dd5d8_row20_col1, #T_dd5d8_row20_col2, #T_dd5d8_row20_col3, #T_dd5d8_row20_col4, #T_dd5d8_row20_col5, #T_dd5d8_row21_col0, #T_dd5d8_row21_col1, #T_dd5d8_row21_col2, #T_dd5d8_row21_col3, #T_dd5d8_row21_col4, #T_dd5d8_row21_col5, #T_dd5d8_row22_col0, #T_dd5d8_row22_col1, #T_dd5d8_row22_col2, #T_dd5d8_row22_col3, #T_dd5d8_row22_col4, #T_dd5d8_row22_col5, #T_dd5d8_row23_col0, #T_dd5d8_row23_col1, #T_dd5d8_row23_col2, #T_dd5d8_row23_col3, #T_dd5d8_row23_col4, #T_dd5d8_row23_col5, #T_dd5d8_row24_col0, #T_dd5d8_row24_col1, #T_dd5d8_row24_col2, #T_dd5d8_row24_col3, #T_dd5d8_row24_col4, #T_dd5d8_row24_col5, #T_dd5d8_row25_col0, #T_dd5d8_row25_col1, #T_dd5d8_row25_col2, #T_dd5d8_row25_col3, #T_dd5d8_row25_col4, #T_dd5d8_row25_col5, #T_dd5d8_row26_col0, #T_dd5d8_row26_col1, #T_dd5d8_row26_col2, #T_dd5d8_row26_col3, #T_dd5d8_row26_col4, #T_dd5d8_row26_col5, #T_dd5d8_row27_col0, #T_dd5d8_row27_col1, #T_dd5d8_row27_col2, #T_dd5d8_row27_col3, #T_dd5d8_row27_col4, #T_dd5d8_row27_col5, #T_dd5d8_row28_col0, #T_dd5d8_row28_col1, #T_dd5d8_row28_col2, #T_dd5d8_row28_col3, #T_dd5d8_row28_col4, #T_dd5d8_row28_col5, #T_dd5d8_row29_col0, #T_dd5d8_row29_col1, #T_dd5d8_row29_col2, #T_dd5d8_row29_col3, #T_dd5d8_row29_col4, #T_dd5d8_row29_col5, #T_dd5d8_row30_col0, #T_dd5d8_row30_col1, #T_dd5d8_row30_col2, #T_dd5d8_row30_col3, #T_dd5d8_row30_col4, #T_dd5d8_row30_col5, #T_dd5d8_row31_col0, #T_dd5d8_row31_col1, #T_dd5d8_row31_col2, #T_dd5d8_row31_col3, #T_dd5d8_row31_col4, #T_dd5d8_row31_col5, #T_dd5d8_row32_col0, #T_dd5d8_row32_col1, #T_dd5d8_row32_col2, #T_dd5d8_row32_col3, #T_dd5d8_row32_col4, #T_dd5d8_row32_col5, #T_dd5d8_row33_col0, #T_dd5d8_row33_col1, #T_dd5d8_row33_col2, #T_dd5d8_row33_col3, #T_dd5d8_row33_col4, #T_dd5d8_row33_col5, #T_dd5d8_row34_col0, #T_dd5d8_row34_col1, #T_dd5d8_row34_col2, #T_dd5d8_row34_col3, #T_dd5d8_row34_col4, #T_dd5d8_row34_col5, #T_dd5d8_row35_col0, #T_dd5d8_row35_col1, #T_dd5d8_row35_col2, #T_dd5d8_row35_col3, #T_dd5d8_row35_col4, #T_dd5d8_row35_col5, #T_dd5d8_row36_col0, #T_dd5d8_row36_col1, #T_dd5d8_row36_col2, #T_dd5d8_row36_col3, #T_dd5d8_row36_col4, #T_dd5d8_row36_col5, #T_dd5d8_row37_col0, #T_dd5d8_row37_col1, #T_dd5d8_row37_col2, #T_dd5d8_row37_col3, #T_dd5d8_row37_col4, #T_dd5d8_row37_col5, #T_dd5d8_row38_col0, #T_dd5d8_row38_col1, #T_dd5d8_row38_col2, #T_dd5d8_row38_col3, #T_dd5d8_row38_col4, #T_dd5d8_row38_col5, #T_dd5d8_row39_col0, #T_dd5d8_row39_col1, #T_dd5d8_row39_col2, #T_dd5d8_row39_col3, #T_dd5d8_row39_col4, #T_dd5d8_row39_col5, #T_dd5d8_row40_col0, #T_dd5d8_row40_col1, #T_dd5d8_row40_col2, #T_dd5d8_row40_col3, #T_dd5d8_row40_col4, #T_dd5d8_row40_col5, #T_dd5d8_row41_col0, #T_dd5d8_row41_col1, #T_dd5d8_row41_col2, #T_dd5d8_row41_col3, #T_dd5d8_row41_col4, #T_dd5d8_row41_col5, #T_dd5d8_row42_col0, #T_dd5d8_row42_col1, #T_dd5d8_row42_col2, #T_dd5d8_row42_col3, #T_dd5d8_row42_col4, #T_dd5d8_row42_col5, #T_dd5d8_row43_col0, #T_dd5d8_row43_col1, #T_dd5d8_row43_col2, #T_dd5d8_row43_col3, #T_dd5d8_row43_col4, #T_dd5d8_row43_col5, #T_dd5d8_row44_col0, #T_dd5d8_row44_col1, #T_dd5d8_row44_col2, #T_dd5d8_row44_col3, #T_dd5d8_row44_col4, #T_dd5d8_row44_col5, #T_dd5d8_row45_col0, #T_dd5d8_row45_col1, #T_dd5d8_row45_col2, #T_dd5d8_row45_col3, #T_dd5d8_row45_col4, #T_dd5d8_row45_col5, #T_dd5d8_row46_col0, #T_dd5d8_row46_col1, #T_dd5d8_row46_col2, #T_dd5d8_row46_col3, #T_dd5d8_row46_col4, #T_dd5d8_row46_col5, #T_dd5d8_row47_col0, #T_dd5d8_row47_col1, #T_dd5d8_row47_col2, #T_dd5d8_row47_col3, #T_dd5d8_row47_col4, #T_dd5d8_row47_col5, #T_dd5d8_row48_col0, #T_dd5d8_row48_col1, #T_dd5d8_row48_col2, #T_dd5d8_row48_col3, #T_dd5d8_row48_col4, #T_dd5d8_row48_col5, #T_dd5d8_row49_col0, #T_dd5d8_row49_col1, #T_dd5d8_row49_col2, #T_dd5d8_row49_col3, #T_dd5d8_row49_col4, #T_dd5d8_row49_col5, #T_dd5d8_row50_col0, #T_dd5d8_row50_col1, #T_dd5d8_row50_col2, #T_dd5d8_row50_col3, #T_dd5d8_row50_col4, #T_dd5d8_row50_col5, #T_dd5d8_row51_col0, #T_dd5d8_row51_col1, #T_dd5d8_row51_col2, #T_dd5d8_row51_col3, #T_dd5d8_row51_col4, #T_dd5d8_row51_col5, #T_dd5d8_row52_col0, #T_dd5d8_row52_col1, #T_dd5d8_row52_col2, #T_dd5d8_row52_col3, #T_dd5d8_row52_col4, #T_dd5d8_row52_col5, #T_dd5d8_row53_col0, #T_dd5d8_row53_col1, #T_dd5d8_row53_col2, #T_dd5d8_row53_col3, #T_dd5d8_row53_col4, #T_dd5d8_row53_col5, #T_dd5d8_row54_col0, #T_dd5d8_row54_col1, #T_dd5d8_row54_col2, #T_dd5d8_row54_col3, #T_dd5d8_row54_col4, #T_dd5d8_row54_col5, #T_dd5d8_row55_col0, #T_dd5d8_row55_col1, #T_dd5d8_row55_col2, #T_dd5d8_row55_col3, #T_dd5d8_row55_col4, #T_dd5d8_row55_col5, #T_dd5d8_row56_col0, #T_dd5d8_row56_col1, #T_dd5d8_row56_col2, #T_dd5d8_row56_col3, #T_dd5d8_row56_col4, #T_dd5d8_row56_col5, #T_dd5d8_row57_col0, #T_dd5d8_row57_col1, #T_dd5d8_row57_col2, #T_dd5d8_row57_col3, #T_dd5d8_row57_col4, #T_dd5d8_row57_col5, #T_dd5d8_row58_col0, #T_dd5d8_row58_col1, #T_dd5d8_row58_col2, #T_dd5d8_row58_col3, #T_dd5d8_row58_col4, #T_dd5d8_row58_col5, #T_dd5d8_row59_col0, #T_dd5d8_row59_col1, #T_dd5d8_row59_col2, #T_dd5d8_row59_col3, #T_dd5d8_row59_col4, #T_dd5d8_row59_col5, #T_dd5d8_row60_col0, #T_dd5d8_row60_col1, #T_dd5d8_row60_col2, #T_dd5d8_row60_col3, #T_dd5d8_row60_col4, #T_dd5d8_row60_col5, #T_dd5d8_row61_col0, #T_dd5d8_row61_col1, #T_dd5d8_row61_col2, #T_dd5d8_row61_col3, #T_dd5d8_row61_col4, #T_dd5d8_row61_col5, #T_dd5d8_row62_col0, #T_dd5d8_row62_col1, #T_dd5d8_row62_col2, #T_dd5d8_row62_col3, #T_dd5d8_row62_col4, #T_dd5d8_row62_col5, #T_dd5d8_row63_col0, #T_dd5d8_row63_col1, #T_dd5d8_row63_col2, #T_dd5d8_row63_col3, #T_dd5d8_row63_col4, #T_dd5d8_row63_col5, #T_dd5d8_row64_col0, #T_dd5d8_row64_col1, #T_dd5d8_row64_col2, #T_dd5d8_row64_col3, #T_dd5d8_row64_col4, #T_dd5d8_row64_col5, #T_dd5d8_row65_col0, #T_dd5d8_row65_col1, #T_dd5d8_row65_col2, #T_dd5d8_row65_col3, #T_dd5d8_row65_col4, #T_dd5d8_row65_col5, #T_dd5d8_row66_col0, #T_dd5d8_row66_col1, #T_dd5d8_row66_col2, #T_dd5d8_row66_col3, #T_dd5d8_row66_col4, #T_dd5d8_row66_col5, #T_dd5d8_row67_col0, #T_dd5d8_row67_col1, #T_dd5d8_row67_col2, #T_dd5d8_row67_col3, #T_dd5d8_row67_col4, #T_dd5d8_row67_col5, #T_dd5d8_row68_col0, #T_dd5d8_row68_col1, #T_dd5d8_row68_col2, #T_dd5d8_row68_col3, #T_dd5d8_row68_col4, #T_dd5d8_row68_col5, #T_dd5d8_row69_col0, #T_dd5d8_row69_col1, #T_dd5d8_row69_col2, #T_dd5d8_row69_col3, #T_dd5d8_row69_col4, #T_dd5d8_row69_col5 {\n",
       "  text-align: left;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_dd5d8\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_dd5d8_level0_col0\" class=\"col_heading level0 col0\" >Businessmen who wanted debt</th>\n",
       "      <th id=\"T_dd5d8_level0_col1\" class=\"col_heading level0 col1\" >Who they contracted to obtain that debt</th>\n",
       "      <th id=\"T_dd5d8_level0_col2\" class=\"col_heading level0 col2\" >How much they tried to obtain</th>\n",
       "      <th id=\"T_dd5d8_level0_col3\" class=\"col_heading level0 col3\" >How much they obtained (according to our data)</th>\n",
       "      <th id=\"T_dd5d8_level0_col4\" class=\"col_heading level0 col4\" >When they tried to do this</th>\n",
       "      <th id=\"T_dd5d8_level0_col5\" class=\"col_heading level0 col5\" >Page number(s)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th class=\"index_name level0\" >No.</th>\n",
       "      <th class=\"blank col0\" >&nbsp;</th>\n",
       "      <th class=\"blank col1\" >&nbsp;</th>\n",
       "      <th class=\"blank col2\" >&nbsp;</th>\n",
       "      <th class=\"blank col3\" >&nbsp;</th>\n",
       "      <th class=\"blank col4\" >&nbsp;</th>\n",
       "      <th class=\"blank col5\" >&nbsp;</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row0\" class=\"row_heading level0 row0\" >1</th>\n",
       "      <td id=\"T_dd5d8_row0_col0\" class=\"data row0 col0\" >Richard Platt</td>\n",
       "      <td id=\"T_dd5d8_row0_col1\" class=\"data row0 col1\" >Winthrop Sargent</td>\n",
       "      <td id=\"T_dd5d8_row0_col2\" class=\"data row0 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row0_col3\" class=\"data row0 col3\" >Richard Platt: $19,420</td>\n",
       "      <td id=\"T_dd5d8_row0_col4\" class=\"data row0 col4\" >May 30, 1786</td>\n",
       "      <td id=\"T_dd5d8_row0_col5\" class=\"data row0 col5\" >253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row1\" class=\"row_heading level0 row1\" >2</th>\n",
       "      <td id=\"T_dd5d8_row1_col0\" class=\"data row1 col0\" >William Duer</td>\n",
       "      <td id=\"T_dd5d8_row1_col1\" class=\"data row1 col1\" >John Holker</td>\n",
       "      <td id=\"T_dd5d8_row1_col2\" class=\"data row1 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row1_col3\" class=\"data row1 col3\" >William Duer: $231</td>\n",
       "      <td id=\"T_dd5d8_row1_col4\" class=\"data row1 col4\" >Dec. 10, 1788</td>\n",
       "      <td id=\"T_dd5d8_row1_col5\" class=\"data row1 col5\" >264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row2\" class=\"row_heading level0 row2\" >3</th>\n",
       "      <td id=\"T_dd5d8_row2_col0\" class=\"data row2 col0\" >William Constable</td>\n",
       "      <td id=\"T_dd5d8_row2_col1\" class=\"data row2 col1\" >James Jarvis</td>\n",
       "      <td id=\"T_dd5d8_row2_col2\" class=\"data row2 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row2_col3\" class=\"data row2 col3\" >James Jarvis: $5,800</td>\n",
       "      <td id=\"T_dd5d8_row2_col4\" class=\"data row2 col4\" >Jan. 12, 1789</td>\n",
       "      <td id=\"T_dd5d8_row2_col5\" class=\"data row2 col5\" >257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row3\" class=\"row_heading level0 row3\" >4</th>\n",
       "      <td id=\"T_dd5d8_row3_col0\" class=\"data row3 col0\" >Andrew Craigie, Christopher Gore</td>\n",
       "      <td id=\"T_dd5d8_row3_col1\" class=\"data row3 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row3_col2\" class=\"data row3 col2\" >$100,000</td>\n",
       "      <td id=\"T_dd5d8_row3_col3\" class=\"data row3 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row3_col4\" class=\"data row3 col4\" >Aug. 7, 1788</td>\n",
       "      <td id=\"T_dd5d8_row3_col5\" class=\"data row3 col5\" >263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row4\" class=\"row_heading level0 row4\" >5</th>\n",
       "      <td id=\"T_dd5d8_row4_col0\" class=\"data row4 col0\" >Gouverneur Morris</td>\n",
       "      <td id=\"T_dd5d8_row4_col1\" class=\"data row4 col1\" >Daniel Parker</td>\n",
       "      <td id=\"T_dd5d8_row4_col2\" class=\"data row4 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row4_col3\" class=\"data row4 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row4_col4\" class=\"data row4 col4\" >May 1789</td>\n",
       "      <td id=\"T_dd5d8_row4_col5\" class=\"data row4 col5\" >270</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row5\" class=\"row_heading level0 row5\" >6</th>\n",
       "      <td id=\"T_dd5d8_row5_col0\" class=\"data row5 col0\" >Charles John Michael de Wolf and Francis Vanderborcht</td>\n",
       "      <td id=\"T_dd5d8_row5_col1\" class=\"data row5 col1\" >Gouverneur Morris, Parker, Samuel Rogers</td>\n",
       "      <td id=\"T_dd5d8_row5_col2\" class=\"data row5 col2\" >$65,000</td>\n",
       "      <td id=\"T_dd5d8_row5_col3\" class=\"data row5 col3\" >Samuel Rogers: $13,021</td>\n",
       "      <td id=\"T_dd5d8_row5_col4\" class=\"data row5 col4\" >Feb. 26, 1790</td>\n",
       "      <td id=\"T_dd5d8_row5_col5\" class=\"data row5 col5\" >265</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row6\" class=\"row_heading level0 row6\" >7</th>\n",
       "      <td id=\"T_dd5d8_row6_col0\" class=\"data row6 col0\" >Francis Baring, Edmund Boehm, Thomas Hinchman</td>\n",
       "      <td id=\"T_dd5d8_row6_col1\" class=\"data row6 col1\" >Gouverneur Morris</td>\n",
       "      <td id=\"T_dd5d8_row6_col2\" class=\"data row6 col2\" >$600,000</td>\n",
       "      <td id=\"T_dd5d8_row6_col3\" class=\"data row6 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row6_col4\" class=\"data row6 col4\" >1789</td>\n",
       "      <td id=\"T_dd5d8_row6_col5\" class=\"data row6 col5\" >265</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row7\" class=\"row_heading level0 row7\" >8</th>\n",
       "      <td id=\"T_dd5d8_row7_col0\" class=\"data row7 col0\" >Clement Biddle</td>\n",
       "      <td id=\"T_dd5d8_row7_col1\" class=\"data row7 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row7_col2\" class=\"data row7 col2\" >$85,000</td>\n",
       "      <td id=\"T_dd5d8_row7_col3\" class=\"data row7 col3\" >Clement Biddle: $117,121</td>\n",
       "      <td id=\"T_dd5d8_row7_col4\" class=\"data row7 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row7_col5\" class=\"data row7 col5\" >280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row8\" class=\"row_heading level0 row8\" >9</th>\n",
       "      <td id=\"T_dd5d8_row8_col0\" class=\"data row8 col0\" >Clement Biddle</td>\n",
       "      <td id=\"T_dd5d8_row8_col1\" class=\"data row8 col1\" >Richard Smith</td>\n",
       "      <td id=\"T_dd5d8_row8_col2\" class=\"data row8 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row8_col3\" class=\"data row8 col3\" >Richard Smith: $884</td>\n",
       "      <td id=\"T_dd5d8_row8_col4\" class=\"data row8 col4\" >May 23, 1790</td>\n",
       "      <td id=\"T_dd5d8_row8_col5\" class=\"data row8 col5\" >269</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row9\" class=\"row_heading level0 row9\" >10</th>\n",
       "      <td id=\"T_dd5d8_row9_col0\" class=\"data row9 col0\" >Clement Biddle</td>\n",
       "      <td id=\"T_dd5d8_row9_col1\" class=\"data row9 col1\" >Robert Gilchrist</td>\n",
       "      <td id=\"T_dd5d8_row9_col2\" class=\"data row9 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row9_col3\" class=\"data row9 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row9_col4\" class=\"data row9 col4\" >Mar. 23, Dec. 24, 1789</td>\n",
       "      <td id=\"T_dd5d8_row9_col5\" class=\"data row9 col5\" >258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row10\" class=\"row_heading level0 row10\" >11</th>\n",
       "      <td id=\"T_dd5d8_row10_col0\" class=\"data row10 col0\" >Elias Boudinot</td>\n",
       "      <td id=\"T_dd5d8_row10_col1\" class=\"data row10 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row10_col2\" class=\"data row10 col2\" >$12,700 state, $36,000 Treasury</td>\n",
       "      <td id=\"T_dd5d8_row10_col3\" class=\"data row10 col3\" >Elias Boudinot: $57,858</td>\n",
       "      <td id=\"T_dd5d8_row10_col4\" class=\"data row10 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row10_col5\" class=\"data row10 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row11\" class=\"row_heading level0 row11\" >12</th>\n",
       "      <td id=\"T_dd5d8_row11_col0\" class=\"data row11 col0\" >Peter Stadnitski</td>\n",
       "      <td id=\"T_dd5d8_row11_col1\" class=\"data row11 col1\" >Daniel Parker, Andrew Craigie</td>\n",
       "      <td id=\"T_dd5d8_row11_col2\" class=\"data row11 col2\" >At least $200,000</td>\n",
       "      <td id=\"T_dd5d8_row11_col3\" class=\"data row11 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row11_col4\" class=\"data row11 col4\" >1786</td>\n",
       "      <td id=\"T_dd5d8_row11_col5\" class=\"data row11 col5\" >260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row12\" class=\"row_heading level0 row12\" >13</th>\n",
       "      <td id=\"T_dd5d8_row12_col0\" class=\"data row12 col0\" >Matthys Ooster</td>\n",
       "      <td id=\"T_dd5d8_row12_col1\" class=\"data row12 col1\" >Daniel Parker, Andrew Craigie</td>\n",
       "      <td id=\"T_dd5d8_row12_col2\" class=\"data row12 col2\" >At least $200,000</td>\n",
       "      <td id=\"T_dd5d8_row12_col3\" class=\"data row12 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row12_col4\" class=\"data row12 col4\" >1786</td>\n",
       "      <td id=\"T_dd5d8_row12_col5\" class=\"data row12 col5\" >260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row13\" class=\"row_heading level0 row13\" >14</th>\n",
       "      <td id=\"T_dd5d8_row13_col0\" class=\"data row13 col0\" >Karel D'Amour</td>\n",
       "      <td id=\"T_dd5d8_row13_col1\" class=\"data row13 col1\" >Daniel Parker, Andrew Craigie</td>\n",
       "      <td id=\"T_dd5d8_row13_col2\" class=\"data row13 col2\" >At least $200,000</td>\n",
       "      <td id=\"T_dd5d8_row13_col3\" class=\"data row13 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row13_col4\" class=\"data row13 col4\" >1786</td>\n",
       "      <td id=\"T_dd5d8_row13_col5\" class=\"data row13 col5\" >260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row14\" class=\"row_heading level0 row14\" >15</th>\n",
       "      <td id=\"T_dd5d8_row14_col0\" class=\"data row14 col0\" >Kindreck Vollenhovem</td>\n",
       "      <td id=\"T_dd5d8_row14_col1\" class=\"data row14 col1\" >Daniel Parker, Andrew Craigie</td>\n",
       "      <td id=\"T_dd5d8_row14_col2\" class=\"data row14 col2\" >At least $200,000</td>\n",
       "      <td id=\"T_dd5d8_row14_col3\" class=\"data row14 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row14_col4\" class=\"data row14 col4\" >1786</td>\n",
       "      <td id=\"T_dd5d8_row14_col5\" class=\"data row14 col5\" >260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row15\" class=\"row_heading level0 row15\" >16</th>\n",
       "      <td id=\"T_dd5d8_row15_col0\" class=\"data row15 col0\" >Hendrick Vollenhoven</td>\n",
       "      <td id=\"T_dd5d8_row15_col1\" class=\"data row15 col1\" >Daniel Parker</td>\n",
       "      <td id=\"T_dd5d8_row15_col2\" class=\"data row15 col2\" >$200,000</td>\n",
       "      <td id=\"T_dd5d8_row15_col3\" class=\"data row15 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row15_col4\" class=\"data row15 col4\" >1788</td>\n",
       "      <td id=\"T_dd5d8_row15_col5\" class=\"data row15 col5\" >262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row16\" class=\"row_heading level0 row16\" >17</th>\n",
       "      <td id=\"T_dd5d8_row16_col0\" class=\"data row16 col0\" >Etienne L'Espinasse</td>\n",
       "      <td id=\"T_dd5d8_row16_col1\" class=\"data row16 col1\" >Daniel Parker</td>\n",
       "      <td id=\"T_dd5d8_row16_col2\" class=\"data row16 col2\" >$200,000</td>\n",
       "      <td id=\"T_dd5d8_row16_col3\" class=\"data row16 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row16_col4\" class=\"data row16 col4\" >1788</td>\n",
       "      <td id=\"T_dd5d8_row16_col5\" class=\"data row16 col5\" >262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row17\" class=\"row_heading level0 row17\" >18</th>\n",
       "      <td id=\"T_dd5d8_row17_col0\" class=\"data row17 col0\" >Christian van EIghen</td>\n",
       "      <td id=\"T_dd5d8_row17_col1\" class=\"data row17 col1\" >Daniel Parker</td>\n",
       "      <td id=\"T_dd5d8_row17_col2\" class=\"data row17 col2\" >$200,000</td>\n",
       "      <td id=\"T_dd5d8_row17_col3\" class=\"data row17 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row17_col4\" class=\"data row17 col4\" >1788</td>\n",
       "      <td id=\"T_dd5d8_row17_col5\" class=\"data row17 col5\" >262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row18\" class=\"row_heading level0 row18\" >19</th>\n",
       "      <td id=\"T_dd5d8_row18_col0\" class=\"data row18 col0\" >Mordecai Lewis</td>\n",
       "      <td id=\"T_dd5d8_row18_col1\" class=\"data row18 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row18_col2\" class=\"data row18 col2\" >$293,000 state, $10,500 Treasury</td>\n",
       "      <td id=\"T_dd5d8_row18_col3\" class=\"data row18 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row18_col4\" class=\"data row18 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row18_col5\" class=\"data row18 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row19\" class=\"row_heading level0 row19\" >20</th>\n",
       "      <td id=\"T_dd5d8_row19_col0\" class=\"data row19 col0\" >Matthew McConnell</td>\n",
       "      <td id=\"T_dd5d8_row19_col1\" class=\"data row19 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row19_col2\" class=\"data row19 col2\" >$87,000 state, $14,000 Treasury</td>\n",
       "      <td id=\"T_dd5d8_row19_col3\" class=\"data row19 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row19_col4\" class=\"data row19 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row19_col5\" class=\"data row19 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row20\" class=\"row_heading level0 row20\" >21</th>\n",
       "      <td id=\"T_dd5d8_row20_col0\" class=\"data row20 col0\" >Andrew Summers, Jr.</td>\n",
       "      <td id=\"T_dd5d8_row20_col1\" class=\"data row20 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row20_col2\" class=\"data row20 col2\" >$46,000 state, $13,000 Treasury</td>\n",
       "      <td id=\"T_dd5d8_row20_col3\" class=\"data row20 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row20_col4\" class=\"data row20 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row20_col5\" class=\"data row20 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row21\" class=\"row_heading level0 row21\" >22</th>\n",
       "      <td id=\"T_dd5d8_row21_col0\" class=\"data row21 col0\" >Hazard and Addoms</td>\n",
       "      <td id=\"T_dd5d8_row21_col1\" class=\"data row21 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row21_col2\" class=\"data row21 col2\" >$34,500 state, $19,500 Treasury</td>\n",
       "      <td id=\"T_dd5d8_row21_col3\" class=\"data row21 col3\" >$56,728</td>\n",
       "      <td id=\"T_dd5d8_row21_col4\" class=\"data row21 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row21_col5\" class=\"data row21 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row22\" class=\"row_heading level0 row22\" >23</th>\n",
       "      <td id=\"T_dd5d8_row22_col0\" class=\"data row22 col0\" >Robert Bridges</td>\n",
       "      <td id=\"T_dd5d8_row22_col1\" class=\"data row22 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row22_col2\" class=\"data row22 col2\" >$31,000 state, $18,000 Treasury</td>\n",
       "      <td id=\"T_dd5d8_row22_col3\" class=\"data row22 col3\" >Robert Bridges: $28,880</td>\n",
       "      <td id=\"T_dd5d8_row22_col4\" class=\"data row22 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row22_col5\" class=\"data row22 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row23\" class=\"row_heading level0 row23\" >24</th>\n",
       "      <td id=\"T_dd5d8_row23_col0\" class=\"data row23 col0\" >Edward Fox</td>\n",
       "      <td id=\"T_dd5d8_row23_col1\" class=\"data row23 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row23_col2\" class=\"data row23 col2\" >$30,500 state, $28,600 Treasury</td>\n",
       "      <td id=\"T_dd5d8_row23_col3\" class=\"data row23 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row23_col4\" class=\"data row23 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row23_col5\" class=\"data row23 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row24\" class=\"row_heading level0 row24\" >25</th>\n",
       "      <td id=\"T_dd5d8_row24_col0\" class=\"data row24 col0\" >Reverend Dr. Robert Blackwell</td>\n",
       "      <td id=\"T_dd5d8_row24_col1\" class=\"data row24 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row24_col2\" class=\"data row24 col2\" >$27,000 state, $64,000 Treasury</td>\n",
       "      <td id=\"T_dd5d8_row24_col3\" class=\"data row24 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row24_col4\" class=\"data row24 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row24_col5\" class=\"data row24 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row25\" class=\"row_heading level0 row25\" >26</th>\n",
       "      <td id=\"T_dd5d8_row25_col0\" class=\"data row25 col0\" >Robert Morris</td>\n",
       "      <td id=\"T_dd5d8_row25_col1\" class=\"data row25 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row25_col2\" class=\"data row25 col2\" >$28,200 state</td>\n",
       "      <td id=\"T_dd5d8_row25_col3\" class=\"data row25 col3\" >Robert Morris: $406,751</td>\n",
       "      <td id=\"T_dd5d8_row25_col4\" class=\"data row25 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row25_col5\" class=\"data row25 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row26\" class=\"row_heading level0 row26\" >27</th>\n",
       "      <td id=\"T_dd5d8_row26_col0\" class=\"data row26 col0\" >Thomas Willing</td>\n",
       "      <td id=\"T_dd5d8_row26_col1\" class=\"data row26 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row26_col2\" class=\"data row26 col2\" >$20,000 state, $20,000 Treasury</td>\n",
       "      <td id=\"T_dd5d8_row26_col3\" class=\"data row26 col3\" >Thomas Willing: $1</td>\n",
       "      <td id=\"T_dd5d8_row26_col4\" class=\"data row26 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row26_col5\" class=\"data row26 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row27\" class=\"row_heading level0 row27\" >28</th>\n",
       "      <td id=\"T_dd5d8_row27_col0\" class=\"data row27 col0\" >Blair McClenachan</td>\n",
       "      <td id=\"T_dd5d8_row27_col1\" class=\"data row27 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row27_col2\" class=\"data row27 col2\" >$74,000</td>\n",
       "      <td id=\"T_dd5d8_row27_col3\" class=\"data row27 col3\" >Blair McClenachan: $2,389</td>\n",
       "      <td id=\"T_dd5d8_row27_col4\" class=\"data row27 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row27_col5\" class=\"data row27 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row28\" class=\"row_heading level0 row28\" >29</th>\n",
       "      <td id=\"T_dd5d8_row28_col0\" class=\"data row28 col0\" >Mrs. McClenachan</td>\n",
       "      <td id=\"T_dd5d8_row28_col1\" class=\"data row28 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row28_col2\" class=\"data row28 col2\" >$21,400</td>\n",
       "      <td id=\"T_dd5d8_row28_col3\" class=\"data row28 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row28_col4\" class=\"data row28 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row28_col5\" class=\"data row28 col5\" >280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row29\" class=\"row_heading level0 row29\" >30</th>\n",
       "      <td id=\"T_dd5d8_row29_col0\" class=\"data row29 col0\" >Solomon Lyon</td>\n",
       "      <td id=\"T_dd5d8_row29_col1\" class=\"data row29 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row29_col2\" class=\"data row29 col2\" >$61,000</td>\n",
       "      <td id=\"T_dd5d8_row29_col3\" class=\"data row29 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row29_col4\" class=\"data row29 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row29_col5\" class=\"data row29 col5\" >279</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row30\" class=\"row_heading level0 row30\" >31</th>\n",
       "      <td id=\"T_dd5d8_row30_col0\" class=\"data row30 col0\" >John Olden</td>\n",
       "      <td id=\"T_dd5d8_row30_col1\" class=\"data row30 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row30_col2\" class=\"data row30 col2\" >$55,000</td>\n",
       "      <td id=\"T_dd5d8_row30_col3\" class=\"data row30 col3\" >John Olden: $2,000</td>\n",
       "      <td id=\"T_dd5d8_row30_col4\" class=\"data row30 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row30_col5\" class=\"data row30 col5\" >280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row31\" class=\"row_heading level0 row31\" >32</th>\n",
       "      <td id=\"T_dd5d8_row31_col0\" class=\"data row31 col0\" >John M. Taylor</td>\n",
       "      <td id=\"T_dd5d8_row31_col1\" class=\"data row31 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row31_col2\" class=\"data row31 col2\" >$50,000</td>\n",
       "      <td id=\"T_dd5d8_row31_col3\" class=\"data row31 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row31_col4\" class=\"data row31 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row31_col5\" class=\"data row31 col5\" >280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row32\" class=\"row_heading level0 row32\" >33</th>\n",
       "      <td id=\"T_dd5d8_row32_col0\" class=\"data row32 col0\" >John Delafied</td>\n",
       "      <td id=\"T_dd5d8_row32_col1\" class=\"data row32 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row32_col2\" class=\"data row32 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row32_col3\" class=\"data row32 col3\" >John Delafield: $1,346</td>\n",
       "      <td id=\"T_dd5d8_row32_col4\" class=\"data row32 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row32_col5\" class=\"data row32 col5\" >280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row33\" class=\"row_heading level0 row33\" >34</th>\n",
       "      <td id=\"T_dd5d8_row33_col0\" class=\"data row33 col0\" >Charles Petit</td>\n",
       "      <td id=\"T_dd5d8_row33_col1\" class=\"data row33 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row33_col2\" class=\"data row33 col2\" >$55,000</td>\n",
       "      <td id=\"T_dd5d8_row33_col3\" class=\"data row33 col3\" >Charles Petit: $82,500</td>\n",
       "      <td id=\"T_dd5d8_row33_col4\" class=\"data row33 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row33_col5\" class=\"data row33 col5\" >258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row34\" class=\"row_heading level0 row34\" >35</th>\n",
       "      <td id=\"T_dd5d8_row34_col0\" class=\"data row34 col0\" >Nicholas Brown</td>\n",
       "      <td id=\"T_dd5d8_row34_col1\" class=\"data row34 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row34_col2\" class=\"data row34 col2\" >$49,973 original, $13,408 transferred</td>\n",
       "      <td id=\"T_dd5d8_row34_col3\" class=\"data row34 col3\" >Nicholas Brown: $32,900</td>\n",
       "      <td id=\"T_dd5d8_row34_col4\" class=\"data row34 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row34_col5\" class=\"data row34 col5\" >280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row35\" class=\"row_heading level0 row35\" >36</th>\n",
       "      <td id=\"T_dd5d8_row35_col0\" class=\"data row35 col0\" >Philip Allen</td>\n",
       "      <td id=\"T_dd5d8_row35_col1\" class=\"data row35 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row35_col2\" class=\"data row35 col2\" >$19,865 original, $12,545 transferred</td>\n",
       "      <td id=\"T_dd5d8_row35_col3\" class=\"data row35 col3\" >Philip Allen: $17</td>\n",
       "      <td id=\"T_dd5d8_row35_col4\" class=\"data row35 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row35_col5\" class=\"data row35 col5\" >282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row36\" class=\"row_heading level0 row36\" >37</th>\n",
       "      <td id=\"T_dd5d8_row36_col0\" class=\"data row36 col0\" >Joseph Clarke</td>\n",
       "      <td id=\"T_dd5d8_row36_col1\" class=\"data row36 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row36_col2\" class=\"data row36 col2\" >$29,789</td>\n",
       "      <td id=\"T_dd5d8_row36_col3\" class=\"data row36 col3\" >Joseph Clarke: $6,039</td>\n",
       "      <td id=\"T_dd5d8_row36_col4\" class=\"data row36 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row36_col5\" class=\"data row36 col5\" >281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row37\" class=\"row_heading level0 row37\" >38</th>\n",
       "      <td id=\"T_dd5d8_row37_col0\" class=\"data row37 col0\" >Nicholas Low</td>\n",
       "      <td id=\"T_dd5d8_row37_col1\" class=\"data row37 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row37_col2\" class=\"data row37 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row37_col3\" class=\"data row37 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row37_col4\" class=\"data row37 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row37_col5\" class=\"data row37 col5\" >281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row38\" class=\"row_heading level0 row38\" >39</th>\n",
       "      <td id=\"T_dd5d8_row38_col0\" class=\"data row38 col0\" >Herman LeRoy</td>\n",
       "      <td id=\"T_dd5d8_row38_col1\" class=\"data row38 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row38_col2\" class=\"data row38 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row38_col3\" class=\"data row38 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row38_col4\" class=\"data row38 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row38_col5\" class=\"data row38 col5\" >258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row39\" class=\"row_heading level0 row39\" >40</th>\n",
       "      <td id=\"T_dd5d8_row39_col0\" class=\"data row39 col0\" >William Bayard</td>\n",
       "      <td id=\"T_dd5d8_row39_col1\" class=\"data row39 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row39_col2\" class=\"data row39 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row39_col3\" class=\"data row39 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row39_col4\" class=\"data row39 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row39_col5\" class=\"data row39 col5\" >258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row40\" class=\"row_heading level0 row40\" >41</th>\n",
       "      <td id=\"T_dd5d8_row40_col0\" class=\"data row40 col0\" >Watson and Greenleaf</td>\n",
       "      <td id=\"T_dd5d8_row40_col1\" class=\"data row40 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row40_col2\" class=\"data row40 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row40_col3\" class=\"data row40 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row40_col4\" class=\"data row40 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row40_col5\" class=\"data row40 col5\" >258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row41\" class=\"row_heading level0 row41\" >42</th>\n",
       "      <td id=\"T_dd5d8_row41_col0\" class=\"data row41 col0\" >C. and J. Shaw</td>\n",
       "      <td id=\"T_dd5d8_row41_col1\" class=\"data row41 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row41_col2\" class=\"data row41 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row41_col3\" class=\"data row41 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row41_col4\" class=\"data row41 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row41_col5\" class=\"data row41 col5\" >258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row42\" class=\"row_heading level0 row42\" >43</th>\n",
       "      <td id=\"T_dd5d8_row42_col0\" class=\"data row42 col0\" >Robert Gilchrist</td>\n",
       "      <td id=\"T_dd5d8_row42_col1\" class=\"data row42 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row42_col2\" class=\"data row42 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row42_col3\" class=\"data row42 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row42_col4\" class=\"data row42 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row42_col5\" class=\"data row42 col5\" >258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row43\" class=\"row_heading level0 row43\" >44</th>\n",
       "      <td id=\"T_dd5d8_row43_col0\" class=\"data row43 col0\" >Nicholas Van Staphorst</td>\n",
       "      <td id=\"T_dd5d8_row43_col1\" class=\"data row43 col1\" >Daniel Parker</td>\n",
       "      <td id=\"T_dd5d8_row43_col2\" class=\"data row43 col2\" >$1,200,000</td>\n",
       "      <td id=\"T_dd5d8_row43_col3\" class=\"data row43 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row43_col4\" class=\"data row43 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row43_col5\" class=\"data row43 col5\" >258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row44\" class=\"row_heading level0 row44\" >45</th>\n",
       "      <td id=\"T_dd5d8_row44_col0\" class=\"data row44 col0\" >Gerit Nutges</td>\n",
       "      <td id=\"T_dd5d8_row44_col1\" class=\"data row44 col1\" >Daniel Parker</td>\n",
       "      <td id=\"T_dd5d8_row44_col2\" class=\"data row44 col2\" >$1,200,000</td>\n",
       "      <td id=\"T_dd5d8_row44_col3\" class=\"data row44 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row44_col4\" class=\"data row44 col4\" >Aug. 1788</td>\n",
       "      <td id=\"T_dd5d8_row44_col5\" class=\"data row44 col5\" >262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row45\" class=\"row_heading level0 row45\" >46</th>\n",
       "      <td id=\"T_dd5d8_row45_col0\" class=\"data row45 col0\" >Johan van Franckenstein</td>\n",
       "      <td id=\"T_dd5d8_row45_col1\" class=\"data row45 col1\" >Daniel Parker</td>\n",
       "      <td id=\"T_dd5d8_row45_col2\" class=\"data row45 col2\" >$1,200,000</td>\n",
       "      <td id=\"T_dd5d8_row45_col3\" class=\"data row45 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row45_col4\" class=\"data row45 col4\" >Aug. 1788</td>\n",
       "      <td id=\"T_dd5d8_row45_col5\" class=\"data row45 col5\" >262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row46\" class=\"row_heading level0 row46\" >47</th>\n",
       "      <td id=\"T_dd5d8_row46_col0\" class=\"data row46 col0\" >Daniel Parker</td>\n",
       "      <td id=\"T_dd5d8_row46_col1\" class=\"data row46 col1\" >Richard Smith</td>\n",
       "      <td id=\"T_dd5d8_row46_col2\" class=\"data row46 col2\" >$250,000</td>\n",
       "      <td id=\"T_dd5d8_row46_col3\" class=\"data row46 col3\" >Daniel Parker: $4,300</td>\n",
       "      <td id=\"T_dd5d8_row46_col4\" class=\"data row46 col4\" >Aug. 1788</td>\n",
       "      <td id=\"T_dd5d8_row46_col5\" class=\"data row46 col5\" >262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row47\" class=\"row_heading level0 row47\" >48</th>\n",
       "      <td id=\"T_dd5d8_row47_col0\" class=\"data row47 col0\" >Daniel Parker</td>\n",
       "      <td id=\"T_dd5d8_row47_col1\" class=\"data row47 col1\" >James Jarvis</td>\n",
       "      <td id=\"T_dd5d8_row47_col2\" class=\"data row47 col2\" >$300,000</td>\n",
       "      <td id=\"T_dd5d8_row47_col3\" class=\"data row47 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row47_col4\" class=\"data row47 col4\" >May 27, 1788</td>\n",
       "      <td id=\"T_dd5d8_row47_col5\" class=\"data row47 col5\" >262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row48\" class=\"row_heading level0 row48\" >49</th>\n",
       "      <td id=\"T_dd5d8_row48_col0\" class=\"data row48 col0\" >William Constable</td>\n",
       "      <td id=\"T_dd5d8_row48_col1\" class=\"data row48 col1\" >James Seagrove</td>\n",
       "      <td id=\"T_dd5d8_row48_col2\" class=\"data row48 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row48_col3\" class=\"data row48 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row48_col4\" class=\"data row48 col4\" >June 18, 1788</td>\n",
       "      <td id=\"T_dd5d8_row48_col5\" class=\"data row48 col5\" >262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row49\" class=\"row_heading level0 row49\" >50</th>\n",
       "      <td id=\"T_dd5d8_row49_col0\" class=\"data row49 col0\" >William Constable</td>\n",
       "      <td id=\"T_dd5d8_row49_col1\" class=\"data row49 col1\" >Robert Hazlehurst & Co.</td>\n",
       "      <td id=\"T_dd5d8_row49_col2\" class=\"data row49 col2\" >$100,000</td>\n",
       "      <td id=\"T_dd5d8_row49_col3\" class=\"data row49 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row49_col4\" class=\"data row49 col4\" >Nov. 19, 1789</td>\n",
       "      <td id=\"T_dd5d8_row49_col5\" class=\"data row49 col5\" >272</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row50\" class=\"row_heading level0 row50\" >51</th>\n",
       "      <td id=\"T_dd5d8_row50_col0\" class=\"data row50 col0\" >Leonard Bleecker</td>\n",
       "      <td id=\"T_dd5d8_row50_col1\" class=\"data row50 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row50_col2\" class=\"data row50 col2\" >$200,000 or $400,000</td>\n",
       "      <td id=\"T_dd5d8_row50_col3\" class=\"data row50 col3\" >Leonard Bleecker: $379</td>\n",
       "      <td id=\"T_dd5d8_row50_col4\" class=\"data row50 col4\" >Dec. 15, 1789</td>\n",
       "      <td id=\"T_dd5d8_row50_col5\" class=\"data row50 col5\" >272</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row51\" class=\"row_heading level0 row51\" >52</th>\n",
       "      <td id=\"T_dd5d8_row51_col0\" class=\"data row51 col0\" >Nathaniel Prime</td>\n",
       "      <td id=\"T_dd5d8_row51_col1\" class=\"data row51 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row51_col2\" class=\"data row51 col2\" >$196,000</td>\n",
       "      <td id=\"T_dd5d8_row51_col3\" class=\"data row51 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row51_col4\" class=\"data row51 col4\" >Dec. 19, 1789</td>\n",
       "      <td id=\"T_dd5d8_row51_col5\" class=\"data row51 col5\" >272</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row52\" class=\"row_heading level0 row52\" >53</th>\n",
       "      <td id=\"T_dd5d8_row52_col0\" class=\"data row52 col0\" >Samuel Breck</td>\n",
       "      <td id=\"T_dd5d8_row52_col1\" class=\"data row52 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row52_col2\" class=\"data row52 col2\" >$104,300</td>\n",
       "      <td id=\"T_dd5d8_row52_col3\" class=\"data row52 col3\" >Samuel Breck: $96</td>\n",
       "      <td id=\"T_dd5d8_row52_col4\" class=\"data row52 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row52_col5\" class=\"data row52 col5\" >274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row53\" class=\"row_heading level0 row53\" >54</th>\n",
       "      <td id=\"T_dd5d8_row53_col0\" class=\"data row53 col0\" >William Philips</td>\n",
       "      <td id=\"T_dd5d8_row53_col1\" class=\"data row53 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row53_col2\" class=\"data row53 col2\" >$94,000</td>\n",
       "      <td id=\"T_dd5d8_row53_col3\" class=\"data row53 col3\" >William Philips: $800</td>\n",
       "      <td id=\"T_dd5d8_row53_col4\" class=\"data row53 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row53_col5\" class=\"data row53 col5\" >274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row54\" class=\"row_heading level0 row54\" >55</th>\n",
       "      <td id=\"T_dd5d8_row54_col0\" class=\"data row54 col0\" >William Philips, Jr.</td>\n",
       "      <td id=\"T_dd5d8_row54_col1\" class=\"data row54 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row54_col2\" class=\"data row54 col2\" >$49,000</td>\n",
       "      <td id=\"T_dd5d8_row54_col3\" class=\"data row54 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row54_col4\" class=\"data row54 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row54_col5\" class=\"data row54 col5\" >274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row55\" class=\"row_heading level0 row55\" >56</th>\n",
       "      <td id=\"T_dd5d8_row55_col0\" class=\"data row55 col0\" >Jonathan Mason</td>\n",
       "      <td id=\"T_dd5d8_row55_col1\" class=\"data row55 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row55_col2\" class=\"data row55 col2\" >$89,000</td>\n",
       "      <td id=\"T_dd5d8_row55_col3\" class=\"data row55 col3\" >Jonathan Mason: $9,107</td>\n",
       "      <td id=\"T_dd5d8_row55_col4\" class=\"data row55 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row55_col5\" class=\"data row55 col5\" >274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row56\" class=\"row_heading level0 row56\" >57</th>\n",
       "      <td id=\"T_dd5d8_row56_col0\" class=\"data row56 col0\" >Jonathan Mason, Jr.</td>\n",
       "      <td id=\"T_dd5d8_row56_col1\" class=\"data row56 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row56_col2\" class=\"data row56 col2\" >$20,486</td>\n",
       "      <td id=\"T_dd5d8_row56_col3\" class=\"data row56 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row56_col4\" class=\"data row56 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row56_col5\" class=\"data row56 col5\" >274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row57\" class=\"row_heading level0 row57\" >58</th>\n",
       "      <td id=\"T_dd5d8_row57_col0\" class=\"data row57 col0\" >William Burley</td>\n",
       "      <td id=\"T_dd5d8_row57_col1\" class=\"data row57 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row57_col2\" class=\"data row57 col2\" >$93,000</td>\n",
       "      <td id=\"T_dd5d8_row57_col3\" class=\"data row57 col3\" >William Burley: $3,050</td>\n",
       "      <td id=\"T_dd5d8_row57_col4\" class=\"data row57 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row57_col5\" class=\"data row57 col5\" >274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row58\" class=\"row_heading level0 row58\" >59</th>\n",
       "      <td id=\"T_dd5d8_row58_col0\" class=\"data row58 col0\" >Nathan Bond</td>\n",
       "      <td id=\"T_dd5d8_row58_col1\" class=\"data row58 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row58_col2\" class=\"data row58 col2\" >$88,000</td>\n",
       "      <td id=\"T_dd5d8_row58_col3\" class=\"data row58 col3\" >Nathan Bond: $94</td>\n",
       "      <td id=\"T_dd5d8_row58_col4\" class=\"data row58 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row58_col5\" class=\"data row58 col5\" >274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row59\" class=\"row_heading level0 row59\" >60</th>\n",
       "      <td id=\"T_dd5d8_row59_col0\" class=\"data row59 col0\" >David Sears</td>\n",
       "      <td id=\"T_dd5d8_row59_col1\" class=\"data row59 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row59_col2\" class=\"data row59 col2\" >$72,000</td>\n",
       "      <td id=\"T_dd5d8_row59_col3\" class=\"data row59 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row59_col4\" class=\"data row59 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row59_col5\" class=\"data row59 col5\" >274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row60\" class=\"row_heading level0 row60\" >61</th>\n",
       "      <td id=\"T_dd5d8_row60_col0\" class=\"data row60 col0\" >John Peck</td>\n",
       "      <td id=\"T_dd5d8_row60_col1\" class=\"data row60 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row60_col2\" class=\"data row60 col2\" >$65,000</td>\n",
       "      <td id=\"T_dd5d8_row60_col3\" class=\"data row60 col3\" >John Peck: $361</td>\n",
       "      <td id=\"T_dd5d8_row60_col4\" class=\"data row60 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row60_col5\" class=\"data row60 col5\" >274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row61\" class=\"row_heading level0 row61\" >62</th>\n",
       "      <td id=\"T_dd5d8_row61_col0\" class=\"data row61 col0\" >John Sprague</td>\n",
       "      <td id=\"T_dd5d8_row61_col1\" class=\"data row61 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row61_col2\" class=\"data row61 col2\" >$68,000</td>\n",
       "      <td id=\"T_dd5d8_row61_col3\" class=\"data row61 col3\" >John Sprague: $38,705</td>\n",
       "      <td id=\"T_dd5d8_row61_col4\" class=\"data row61 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row61_col5\" class=\"data row61 col5\" >274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row62\" class=\"row_heading level0 row62\" >63</th>\n",
       "      <td id=\"T_dd5d8_row62_col0\" class=\"data row62 col0\" >John Harbach</td>\n",
       "      <td id=\"T_dd5d8_row62_col1\" class=\"data row62 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row62_col2\" class=\"data row62 col2\" >$20,900 state, $63,600 Treasury</td>\n",
       "      <td id=\"T_dd5d8_row62_col3\" class=\"data row62 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row62_col4\" class=\"data row62 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row62_col5\" class=\"data row62 col5\" >274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row63\" class=\"row_heading level0 row63\" >64</th>\n",
       "      <td id=\"T_dd5d8_row63_col0\" class=\"data row63 col0\" >General Walter Stewart</td>\n",
       "      <td id=\"T_dd5d8_row63_col1\" class=\"data row63 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row63_col2\" class=\"data row63 col2\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row63_col3\" class=\"data row63 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row63_col4\" class=\"data row63 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row63_col5\" class=\"data row63 col5\" >284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row64\" class=\"row_heading level0 row64\" >65</th>\n",
       "      <td id=\"T_dd5d8_row64_col0\" class=\"data row64 col0\" >Christopher Marshall, Christopher Marshall, Jr., Charles Marshall</td>\n",
       "      <td id=\"T_dd5d8_row64_col1\" class=\"data row64 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row64_col2\" class=\"data row64 col2\" >Over $50,000</td>\n",
       "      <td id=\"T_dd5d8_row64_col3\" class=\"data row64 col3\" >Christopher Marshall: $11,000</td>\n",
       "      <td id=\"T_dd5d8_row64_col4\" class=\"data row64 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row64_col5\" class=\"data row64 col5\" >280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row65\" class=\"row_heading level0 row65\" >66</th>\n",
       "      <td id=\"T_dd5d8_row65_col0\" class=\"data row65 col0\" >Andrew Caldwell and John Caldwell</td>\n",
       "      <td id=\"T_dd5d8_row65_col1\" class=\"data row65 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row65_col2\" class=\"data row65 col2\" >$53,000</td>\n",
       "      <td id=\"T_dd5d8_row65_col3\" class=\"data row65 col3\" >Andrew and John Caldwell: $96,040</td>\n",
       "      <td id=\"T_dd5d8_row65_col4\" class=\"data row65 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row65_col5\" class=\"data row65 col5\" >279</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row66\" class=\"row_heading level0 row66\" >67</th>\n",
       "      <td id=\"T_dd5d8_row66_col0\" class=\"data row66 col0\" >Zachariah Allen</td>\n",
       "      <td id=\"T_dd5d8_row66_col1\" class=\"data row66 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row66_col2\" class=\"data row66 col2\" >$16,420 original, $5,860 transferred</td>\n",
       "      <td id=\"T_dd5d8_row66_col3\" class=\"data row66 col3\" >Zachariah Allen: $47.00</td>\n",
       "      <td id=\"T_dd5d8_row66_col4\" class=\"data row66 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row66_col5\" class=\"data row66 col5\" >279</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row67\" class=\"row_heading level0 row67\" >68</th>\n",
       "      <td id=\"T_dd5d8_row67_col0\" class=\"data row67 col0\" >Jabez Bowen</td>\n",
       "      <td id=\"T_dd5d8_row67_col1\" class=\"data row67 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row67_col2\" class=\"data row67 col2\" >$19,065</td>\n",
       "      <td id=\"T_dd5d8_row67_col3\" class=\"data row67 col3\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row67_col4\" class=\"data row67 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row67_col5\" class=\"data row67 col5\" >282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row68\" class=\"row_heading level0 row68\" >69</th>\n",
       "      <td id=\"T_dd5d8_row68_col0\" class=\"data row68 col0\" >Clarke and Nightingale</td>\n",
       "      <td id=\"T_dd5d8_row68_col1\" class=\"data row68 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row68_col2\" class=\"data row68 col2\" >$15,792</td>\n",
       "      <td id=\"T_dd5d8_row68_col3\" class=\"data row68 col3\" >Nightingale: $866.85</td>\n",
       "      <td id=\"T_dd5d8_row68_col4\" class=\"data row68 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row68_col5\" class=\"data row68 col5\" >281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_dd5d8_level0_row69\" class=\"row_heading level0 row69\" >70</th>\n",
       "      <td id=\"T_dd5d8_row69_col0\" class=\"data row69 col0\" >Welcome Arnold</td>\n",
       "      <td id=\"T_dd5d8_row69_col1\" class=\"data row69 col1\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row69_col2\" class=\"data row69 col2\" >$11,994</td>\n",
       "      <td id=\"T_dd5d8_row69_col3\" class=\"data row69 col3\" >Welcome Arnold: $106</td>\n",
       "      <td id=\"T_dd5d8_row69_col4\" class=\"data row69 col4\" >N/A</td>\n",
       "      <td id=\"T_dd5d8_row69_col5\" class=\"data row69 col5\" >282</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x167b41d00>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from IPython.display import display\n",
    "\n",
    "# Create an empty DataFrame with the specified columns\n",
    "df = pd.DataFrame(columns=[\n",
    "    'Businessmen who wanted debt',\n",
    "    'Who they contracted to obtain that debt',\n",
    "    'How much they tried to obtain',\n",
    "    'How much they obtained (according to our data)',\n",
    "    'When they tried to do this',\n",
    "    'Page number(s)'\n",
    "])\n",
    "\n",
    "businessmen = [\n",
    "        \"Richard Platt\", \"William Duer\", \"William Constable\", \"Andrew Craigie, Christopher Gore\", \n",
    "        \"Gouverneur Morris\", \"Charles John Michael de Wolf and Francis Vanderborcht\", \"Francis Baring, Edmund Boehm, Thomas Hinchman\", \n",
    "        \"Clement Biddle\", \"Clement Biddle\", \"Clement Biddle\", \"Elias Boudinot\", \"Peter Stadnitski\", \n",
    "        \"Matthys Ooster\", \"Karel D'Amour\", \"Kindreck Vollenhovem\", \"Hendrick Vollenhoven\", \"Etienne L'Espinasse\", \n",
    "        \"Christian van EIghen\", \"Mordecai Lewis\", \"Matthew McConnell\", \"Andrew Summers, Jr.\", \"Hazard and Addoms\", \n",
    "        \"Robert Bridges\", \"Edward Fox\", \"Reverend Dr. Robert Blackwell\", \"Robert Morris\", \"Thomas Willing\",\n",
    "        \"Blair McClenachan\", \"Mrs. McClenachan\", \"Solomon Lyon\", \"John Olden\", \"John M. Taylor\", \"John Delafied\", \n",
    "        \"Charles Petit\", \"Nicholas Brown\", \"Philip Allen\", \"Joseph Clarke\", \"Nicholas Low\", \"Herman LeRoy\", \"William Bayard\", \n",
    "        \"Watson and Greenleaf\", \"C. and J. Shaw\", \"Robert Gilchrist\", \"Nicholas Van Staphorst\", \"Gerit Nutges\", \n",
    "        \"Johan van Franckenstein\", \"Daniel Parker\", \"Daniel Parker\", \"William Constable\", \"William Constable\", \"Leonard Bleecker\", \"Nathaniel Prime\", \"Samuel Breck\", \"William Philips\", \n",
    "        \"William Philips, Jr.\", \"Jonathan Mason\", \"Jonathan Mason, Jr.\", \"William Burley\", \"Nathan Bond\", \"David Sears\", \n",
    "        \"John Peck\", \"John Sprague\", \"John Harbach\", \"General Walter Stewart\", \"Christopher Marshall, Christopher Marshall, Jr., Charles Marshall\", \n",
    "        \"Andrew Caldwell and John Caldwell\", \"Zachariah Allen\", \"Jabez Bowen\", \n",
    "        \"Clarke and Nightingale\", \"Welcome Arnold\"\n",
    "]\n",
    "\n",
    "contractors = [\n",
    "        \"Winthrop Sargent\", \"John Holker\", \"James Jarvis\", \"N/A\", \"Daniel Parker\", \n",
    "        \"Gouverneur Morris, Parker, Samuel Rogers\", \"Gouverneur Morris\", \"N/A\", \n",
    "        \"Richard Smith\", \"Robert Gilchrist\", \"N/A\", \"Daniel Parker, Andrew Craigie\", \n",
    "        \"Daniel Parker, Andrew Craigie\", \"Daniel Parker, Andrew Craigie\", \"Daniel Parker, Andrew Craigie\", \n",
    "        \"Daniel Parker\", \"Daniel Parker\", \"Daniel Parker\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \n",
    "        \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \n",
    "        \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"Daniel Parker\", \"Daniel Parker\", \"Daniel Parker\", \"Richard Smith\", \n",
    "        \"James Jarvis\", \"James Seagrove\", \"Robert Hazlehurst & Co.\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \n",
    "        \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"\n",
    "]\n",
    "\n",
    "pages = [\n",
    "    \"253\", \"264\", \"257\", \"263\", \"270\", \"265\", \"265\", \"280\", \"269\", \"258\", \"284\", \"260\", \"260\", \"260\", \"260\", \n",
    "    \"262\", \"262\", \"262\", \"284\", \"284\", \"284\", \"284\", \"284\", \"284\", \"284\", \"284\", \"284\", \"284\", \"280\", \"279\", \n",
    "    \"280\", \"280\", \"280\", \"258\", \"280\", \"282\", \"281\", \"281\", \"258\", \"258\", \"258\", \"258\", \"258\", \"258\", \"262\", \n",
    "    \"262\", \"262\", \"262\", \"262\", \"272\", \"272\", \"272\", \"274\", \"274\", \"274\", \"274\", \"274\", \"274\", \"274\", \"274\", \n",
    "    \"274\", \"274\", \"274\", \"284\", \"280\", \"279\", \"279\", \"282\", \"281\", \"282\", \"281\"\n",
    "]\n",
    "\n",
    "tried_to_obtain = [\n",
    "    \"N/A\", \"N/A\", \"N/A\", \"$100,000\", \"N/A\", \"$65,000\", \"$600,000\", \"$85,000\", \"N/A\", \"N/A\",\n",
    "    \"$12,700 state, $36,000 Treasury\", \"At least $200,000\", \"At least $200,000\", \"At least $200,000\", \"At least $200,000\",\n",
    "    \"$200,000\", \"$200,000\", \"$200,000\", \"$293,000 state, $10,500 Treasury\", \"$87,000 state, $14,000 Treasury\",\n",
    "    \"$46,000 state, $13,000 Treasury\", \"$34,500 state, $19,500 Treasury\", \"$31,000 state, $18,000 Treasury\",\n",
    "    \"$30,500 state, $28,600 Treasury\", \"$27,000 state, $64,000 Treasury\", \"$28,200 state\",\n",
    "    \"$20,000 state, $20,000 Treasury\", \"$74,000\", \"$21,400\", \"$61,000\", \"$55,000\", \n",
    "    \"$50,000\", \"N/A\", \"$55,000\", \"$49,973 original, $13,408 transferred\",\n",
    "    \"$19,865 original, $12,545 transferred\", \"$29,789\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"$1,200,000\", \"$1,200,000\", \"$1,200,000\", \"$250,000\", \"$300,000\", \"N/A\", \"$100,000\", \"$200,000 or $400,000\",\n",
    "    \"$196,000\", \"$104,300\", \"$94,000\", \"$49,000\", \"$89,000\", \"$20,486\", \"$93,000\", \"$88,000\",\n",
    "    \"$72,000\", \"$65,000\", \"$68,000\", \"$20,900 state, $63,600 Treasury\", \"N/A\", \"Over $50,000\", \"$53,000\",\n",
    "    \"$16,420 original, $5,860 transferred\", \"$19,065\", \"$15,792\", \"$11,994\"\n",
    "]\n",
    "\n",
    "amount_obtained = [\n",
    "    \"Richard Platt: $19,420\", \"William Duer: $231\", \"James Jarvis: $5,800\", \"N/A\", \"N/A\",\n",
    "    \"Samuel Rogers: $13,021\", \"N/A\", \"Clement Biddle: $117,121\", \"Richard Smith: $884\", \"N/A\",\n",
    "    \"Elias Boudinot: $57,858\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"N/A\", \"$56,728\", \"Robert Bridges: $28,880\", \"N/A\", \"N/A\",\n",
    "    \"Robert Morris: $406,751\", \"Thomas Willing: $1\", \"Blair McClenachan: $2,389\", \"N/A\", \"N/A\",\n",
    "    \"John Olden: $2,000\", \"N/A\", \"John Delafield: $1,346\", \"Charles Petit: $82,500\", \"Nicholas Brown: $32,900\",\n",
    "    \"Philip Allen: $17\", \"Joseph Clarke: $6,039\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"N/A\", \"Daniel Parker: $4,300\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"Leonard Bleecker: $379\", \"N/A\", \"Samuel Breck: $96\", \"William Philips: $800\", \"N/A\",\n",
    "    \"Jonathan Mason: $9,107\", \"N/A\", \"William Burley: $3,050\", \"Nathan Bond: $94\", \"N/A\",\n",
    "    \"John Peck: $361\", \"John Sprague: $38,705\", \"N/A\", \"N/A\", \"Christopher Marshall: $11,000\",\n",
    "    \"Andrew and John Caldwell: $96,040\", \"Zachariah Allen: $47.00\", \"N/A\", \"Nightingale: $866.85\", \"Welcome Arnold: $106\"\n",
    "]\n",
    "\n",
    "when_tried = [\n",
    "   \"May 30, 1786\", \"Dec. 10, 1788\", \"Jan. 12, 1789\", \"Aug. 7, 1788\", \"May 1789\", \"Feb. 26, 1790\", \"1789\",\n",
    "    \"N/A\", \"May 23, 1790\", \"Mar. 23, Dec. 24, 1789\", \"N/A\", \"1786\",\n",
    "    \"1786\", \"1786\", \"1786\", \"1788\", \"1788\",\n",
    "    \"1788\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"Aug. 1788\", \"Aug. 1788\",\n",
    "    \"Aug. 1788\", \"May 27, 1788\", \"June 18, 1788\", \"Nov. 19, 1789\", \"Dec. 15, 1789\", \"Dec. 19, 1789\",\n",
    "    \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"N/A\", \"N/A\", \"N/A\",\n",
    "    \"N/A\", \"N/A\"\n",
    "]\n",
    "\n",
    "# Create a DataFrame with the businessmen names\n",
    "df['Businessmen who wanted debt'] = businessmen\n",
    "\n",
    "# Add creditors to the \"Who they contracted to obtain that debt\" column\n",
    "# If there are fewer creditors than businessmen, the remaining rows will be NaN\n",
    "df['Who they contracted to obtain that debt'] = pd.Series(contractors)\n",
    "\n",
    "# Add page numbers to the \"Page number(s)\" column\n",
    "df['Page number(s)'] = pd.Series(pages)\n",
    "\n",
    "# Add \"tried to obtain\" amounts to the \"How much they tried to obtain\" column\n",
    "df['How much they tried to obtain'] = pd.Series(tried_to_obtain)\n",
    "\n",
    "# Add \"when tried\" dates to the \"When they tried to do this\" column\n",
    "df['When they tried to do this'] = pd.Series(when_tried)\n",
    "\n",
    "# Add \"amount obtained\" to the \"How much they obtained (according to our data)\" column\n",
    "df['How much they obtained (according to our data)'] = pd.Series(amount_obtained)\n",
    "\n",
    "# Reset the index to start from 1 and make it visible\n",
    "df.index = range(1, len(df) + 1)\n",
    "df.index.name = 'No.'\n",
    "\n",
    "# Style the table for better readability\n",
    "styled_df = df.style.set_properties(**{'text-align': 'left'})\n",
    "styled_df = styled_df.set_table_styles([\n",
    "    dict(selector='th', props=[('text-align', 'center')]),\n",
    "    dict(selector='td', props=[('text-align', 'left')])\n",
    "])\n",
    "\n",
    "# Display the styled table\n",
    "display(styled_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "64e8d026-0fd3-426b-9cdc-7d7fb4fcb9f1",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
